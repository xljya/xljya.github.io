<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo迁移到WordPress</title>
      <link href="/posts/2025/03/11/1152063531.html"/>
      <url>/posts/2025/03/11/1152063531.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2023.10.17 的时候，我写下了 Hexo 博客的第一篇文章，当时搭建 hexo 看了很多很多教程，也踩了很多坑，中途搭建过三次，到第三次才搭建成功。</p><p>第一次失败原因是没有在 git 使用代理，通过国内网络下载 github 又基本上随缘，所以失败了。<br>第二次是准备通过 Vercel 来进行部署，但还是对 Vercel 不太熟悉，没有理解它的推送机制（后来知道推送到 github 后 vercel 也会自动更新），所以失败了。<br>第三次是给 git 添加了本地代理，所以很流畅的部署成功了。</p><p>Hexo 算是我的第一个博客主题，也付出了很多时间，有了感情，但是因为一些原因，还是想迁移到 WordPress。<br><br><br><br></p><h1 id="迁移原因"><a href="#迁移原因" class="headerlink" title="迁移原因"></a>迁移原因</h1><ol><li>Hexo 需要一台特定的设备来更新博客，同步性比较差。</li><li>Hexo 相对来说比较简洁，不太符合我想折腾的心。</li><li>有多台 VPS，不拿一台来搭建博客出来有点可惜😎<br><br></li></ol><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>WordPress有一个完善的导入功能，可以从 RSS 订阅源中导入日志，Hexo 添加插件后也可以输出 RSS订阅内容，那么两者就可以完成数据转移了。</p><h2 id="WordPress端"><a href="#WordPress端" class="headerlink" title="WordPress端"></a>WordPress端</h2><p>登录后台 –&gt; 工具 –&gt; 导入 –&gt; 安装RSS<br><br></p><h2 id="Hexo端"><a href="#Hexo端" class="headerlink" title="Hexo端"></a>Hexo端</h2><p>1.安装 <strong>hexo-generator-feed</strong> 插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><p>2.配置博客根目录文件”_config.yml”（注意：格式一定要选择RSS2，只有这个格式WordPress才支持，”limit: “填 0 或者 false）</p><blockquote><p>Hexo默认是输出 <code>atom.xml</code> 订阅内容的，这个文件的标准是 <code>Atom 1.0</code> 的，而且默认输出最近 <code>20</code> 篇文章摘要，我们将其改成输出 <code>RSS 2.0</code> 标准，且将内容完整输出，在 <code>_config.yml</code> 中加入如下内容：</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RSS订阅</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rss2</span> <span class="comment"># 制定类型</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">rss2.xml</span> <span class="comment"># 路径</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">0</span> <span class="comment"># 文章数量，0或false表示所有文章</span></span><br><span class="line">  <span class="attr">hub:</span></span><br></pre></td></tr></table></figure><br><br><h1 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h1><blockquote><p>默认只能同步没有密码的，有密码的文章记得删除密码。</p></blockquote><ol><li>运行hexo c &amp;&amp; hexo g 命令，生成网站文件。</li><li>找到 博客根目录&#x2F;public&#x2F;rss2.xml 文件</li><li>WordPress 运行RSS导入器，上传并导入文件</li></ol><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://blog.xiecoder.com/2023/08/29/hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0wordpress/">Hexo博客迁移到WordPress | Xie’ Blog</a></li><li><a href="https://coder.lufer.cc/2021/12/%E4%BB%8Ehexo%E5%B0%86%E5%86%85%E5%AE%B9%E8%BF%81%E7%A7%BB%E5%88%B0wordpress/">从Hexo将内容迁移到WordPress - Lufer</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> WordPress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Oh My Zsh美化终端</title>
      <link href="/posts/2025/02/16/3985416481.html"/>
      <url>/posts/2025/02/16/3985416481.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>传统的 Bash 功能相对简陋且不美观。本文采用的系统是 Debian12(Ubuntu 也一样)，安装 Zsh 以及 Oh My Zsh，对终端进行美化。Oh My Zsh 是 Zsh 的一个扩展工具集，提供了丰富的功能和主题，让终端界面更加个性化和高效。</p><p>我用的是 root 用户，所以运行指令不需要加上 sudo，非 root 用户安装等指令还需加上 sudo。<br><br><br><br></p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="安装基本工具"><a href="#安装基本工具" class="headerlink" title="安装基本工具"></a>安装基本工具</h2><p>首先，更新系统并安装必要的工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新软件源</span></span><br><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Zsh、Git 和 Curl</span></span><br><span class="line">sudo apt install zsh git curl -y</span><br></pre></td></tr></table></figure><p>设置 Zsh 为默认终端（<strong>注意：不要使用 sudo</strong>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><br><h2 id="安装-Oh-My-Zsh"><a href="#安装-Oh-My-Zsh" class="headerlink" title="安装 Oh My Zsh"></a>安装 Oh My Zsh</h2><p>官网：<a href="http://ohmyz.sh/">http://ohmyz.sh/</a>。安装方式任选一个即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 curl 安装</span></span><br><span class="line">curl -fsSL https://install.ohmyz.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 wget 安装</span></span><br><span class="line">wget -O- https://install.ohmyz.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用国内镜像（curl）</span></span><br><span class="line">curl -fsSL https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用国内镜像（wget）</span></span><br><span class="line">wget -O- https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh | sh</span><br></pre></td></tr></table></figure><br><h2 id="从-bashrc-迁移配置（可选）"><a href="#从-bashrc-迁移配置（可选）" class="headerlink" title="从 .bashrc 迁移配置（可选）"></a>从 .bashrc 迁移配置（可选）</h2><p>如果你曾在 Bash 中自定义了一些环境变量或别名，在切换到 Zsh 后，需要手动迁移这些配置。操作步骤如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看原 Bash 配置文件</span></span><br><span class="line"><span class="built_in">cat</span> ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 Zsh 配置文件并粘贴自定义配置</span></span><br><span class="line">nano ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>如果是 root 用户，执行 <code>sudo su</code> 后再次进行上述操作。</p></blockquote><br><br><h1 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h1><h2 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wget -O <span class="variable">$ZSH_CUSTOM</span>/themes/haoomz.zsh-theme https://cdn.haoyep.com/gh/leegical/Blog_img/zsh/haoomz.zsh-theme</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 .zshrc 文件，设置主题 </span></span><br><span class="line">nano ~/.zshrc </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主题为 haoomz </span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;haoomz&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使配置生效 </span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p><img src="https://image.liucf.com/images/2025/02/157b9d4d3bdc24d35ae9459ba8caee8b.png" alt="image.png|300"><br><br></p><h2 id="推荐主题"><a href="#推荐主题" class="headerlink" title="推荐主题"></a>推荐主题</h2><p>可以在<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes">内置主题样式截图</a>中查看所有 zsh 内置的主题样式和对应的主题名。这些内置主题已经放在 ～&#x2F;.oh-my-zsh&#x2F;themes 目录下，不需要再下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/themes &amp;&amp; <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://image.liucf.com/images/2025/02/9a95a053dcfadd50ea4353421147f52c.png" alt="image.png|300"><br><br></p><h3 id="powerlevel10k"><a href="#powerlevel10k" class="headerlink" title="powerlevel10k"></a>powerlevel10k</h3><p>根据 <a href="https://www.slant.co/topics/7553/~theme-for-oh-my-zsh">What’s the best theme for Oh My Zsh?</a> 中的排名，以及自定义化、美观程度，强烈建议使用 <a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a> 主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆 Powerlevel10k 主题</span></span><br><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在~/.zshrc设置主题</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;powerlevel10k/powerlevel10k&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使配置生效 </span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>完成后，终端会自动引导你配置 <code>powerlevel10k</code> 主题。</p></blockquote><br><br><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p><code>oh-my-zsh</code> 已经内置了 <code>git</code> 插件，内置插件可以在 <code>～/.oh-my-zsh/plugins</code> 中查看，下面介绍一下我常用的插件，更多插件可以在 <a href="https://github.com/unixorn/awesome-zsh-plugins">awesome-zsh-plugins</a> 里查看。</p><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><blockquote><p>最后，记得启用所有插件。</p></blockquote><h3 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh -autosuggestions"></a>zsh -autosuggestions</h3><p><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a> 是一个命令提示插件，当你输入命令时，会自动推测你可能需要输入的命令，按下右键可以快速采用建议。</p><p>安装方式：把插件下载到本地的 <code>~/.oh-my-zsh/custom/plugins</code> 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><h3 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h3><p><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a> 是一个命令语法校验插件，在输入命令的过程中，若指令不合法，则指令显示为红色，若指令合法就会显示为绿色。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><h3 id="z"><a href="#z" class="headerlink" title="z"></a>z</h3><p><code>oh-my-zsh</code> 内置了 <code>z</code> 插件。<code>z</code> 是一个文件夹快捷跳转插件，对于曾经跳转过的目录，只需要输入最终目标文件夹名称，就可以快速跳转，避免再输入长串路径，提高切换文件夹的效率。</p><h3 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h3><p><code>oh-my-zsh</code> 内置了 <code>extract</code> 插件。<code>extract</code> 用于解压任何压缩文件，不必根据压缩文件的后缀名来记忆压缩软件。</p><p>使用 <code>x</code> 命令即可解压文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 x 解压文件</span></span><br><span class="line">x file.tar.gz</span><br></pre></td></tr></table></figure><br><h2 id="启用插件"><a href="#启用插件" class="headerlink" title="启用插件"></a>启用插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改~/.zshrc中插件列表</span></span><br><span class="line">plugins=(git zsh-autosuggestions zsh-syntax-highlighting z extract web-search)</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><br><br><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h2 id="配置本地代理"><a href="#配置本地代理" class="headerlink" title="配置本地代理"></a>配置本地代理</h2><p>如果你配置了本地代理，并希望终端的 git 等命令使用代理，那么可以在 <code>~/.zshrc</code> 中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为 curl wget git 等设置代理 </span></span><br><span class="line"><span class="function"><span class="title">proxy</span></span> () &#123; </span><br><span class="line"><span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;socks5://127.0.0.1:10809&quot;</span> </span><br><span class="line"><span class="built_in">export</span> all_proxy=<span class="string">&quot;socks5://127.0.0.1:10809&quot;</span> </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消代理 </span></span><br><span class="line"><span class="function"><span class="title">unproxy</span></span> () &#123; </span><br><span class="line"><span class="built_in">unset</span> ALL_PROXY </span><br><span class="line"><span class="built_in">unset</span> all_proxy </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里假设本地代理的端口是 <code>10809</code>。</p></blockquote><p>以后在使用 <code>git</code> 等命令之前，只需要在终端中输入 <code>proxy</code> 命令，即可使用本地代理。<br><br></p><h2 id="卸载-Oh-My-Zsh"><a href="#卸载-Oh-My-Zsh" class="headerlink" title="卸载 Oh My Zsh"></a>卸载 Oh My Zsh</h2><p>终端输入 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure><br><h2 id="手动更新-Oh-My-Zsh"><a href="#手动更新-Oh-My-Zsh" class="headerlink" title="手动更新 Oh My Zsh"></a>手动更新 Oh My Zsh</h2><p>如果自动更新提示被误触关闭，可以通过以下命令手动更新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upgrade_oh_my_zsh</span><br></pre></td></tr></table></figure><br><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><table><thead><tr><th>快捷键</th><th>功能描述</th></tr></thead><tbody><tr><td><code>Ctrl + A</code></td><td>跳到行首</td></tr><tr><td><code>Ctrl + E</code></td><td>跳到行尾</td></tr><tr><td><code>Ctrl + U</code></td><td>删除光标前的所有字符</td></tr><tr><td><code>Ctrl + K</code></td><td>删除光标后的所有字符</td></tr><tr><td><code>Ctrl + W</code></td><td>删除光标前的一个单词（空格为分隔符）</td></tr><tr><td><code>Ctrl + Y</code></td><td>粘贴删除的内容</td></tr><tr><td><code>Ctrl + L</code></td><td>清屏（类似 <code>clear</code> 命令）</td></tr><tr><td><code>Ctrl + C</code></td><td>终止当前运行的命令（如果命令运行时卡住，按此可中止）</td></tr><tr><td><code>Ctrl + D</code></td><td>退出当前 Shell 会话（等同于 <code>exit</code> 命令）</td></tr><tr><td><code>Ctrl + Z</code></td><td>将当前命令挂起并发送到后台（可以用 <code>fg</code> 恢复）</td></tr><tr><td><code>Ctrl + R</code></td><td>启动历史命令搜索，可以反向搜索历史命令</td></tr><tr><td><code>Ctrl + S</code></td><td>停止屏幕输出（再次按 <code>Ctrl + S</code> 恢复）</td></tr><tr><td><code>Ctrl + Q</code></td><td>继续屏幕输出（用于恢复 <code>Ctrl + S</code> 停止的输出）</td></tr><tr><td><code>Tab</code></td><td>自动补全命令或文件名</td></tr><tr><td><code>Shift + Tab</code></td><td>向后自动补全（撤回补全）</td></tr><tr><td><code>Alt + .</code></td><td>插入上一个命令的最后一个参数</td></tr><tr><td><code>Alt + C</code></td><td>将光标移动到当前路径的文件夹名称的中间位置</td></tr><tr><td><code>Alt + /</code></td><td>补全当前目录路径</td></tr><tr><td><code>Up Arrow</code></td><td>上一条历史命令</td></tr><tr><td><code>Down Arrow</code></td><td>下一条历史命令</td></tr><tr><td><code>Ctrl + P</code></td><td>上一条历史命令（类似于 <code>Up Arrow</code>）</td></tr><tr><td><code>Ctrl + N</code></td><td>下一条历史命令（类似于 <code>Down Arrow</code>）</td></tr><tr><td><code>Ctrl + X</code> <code>Ctrl + E</code></td><td>在编辑器中打开当前命令（默认是 <code>vi</code> 编辑器）</td></tr><tr><td><br></td><td></td></tr><tr><td><br></td><td></td></tr></tbody></table><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://www.haoyep.com/posts/zsh-config-oh-my-zsh/">zsh 安装与配置，使用 oh-my-zsh 美化终端 | Leehow的小站</a></li><li><a href="https://www.ermao.net/article/106izvxs/">Zsh 安装与配置 - 使用 Oh My Zsh 美化终端</a></li><li><a href="https://awesometop.cn/posts/4dc849a54e924f1da14b52f1b2beaef1">Oh My Zsh 使用指南 - Awesome Top 中文社区</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS制作种子和发布</title>
      <link href="/posts/2025/01/26/1732245461.html"/>
      <url>/posts/2025/01/26/1732245461.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是一篇进入 PT 站后面向新手的教程，至于 PT 的简介，和怎么进入 PT 站就不进行描述了，自己 google 即可。</p><p>说起来也挺有意思，写这篇教程之前，因为那时候在外地，所以我是用手机和平板上的 SSH 工具 Termius 来连接 vps 进行的操作。</p><p>我的 vps 系统是 debian12。<br><br></p><br><h1 id="种子制作"><a href="#种子制作" class="headerlink" title="种子制作"></a>种子制作</h1><h2 id="安装-Transmission"><a href="#安装-Transmission" class="headerlink" title="安装 Transmission"></a>安装 Transmission</h2><p>Transmission 是一个轻量级的 BT 客户端，支持创建种子文件。首先，在 VPS 上安装 Transmission 和其后台守护进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install transmission transmission-daemon</span><br></pre></td></tr></table></figure><br><h2 id="修改和保存配置文件"><a href="#修改和保存配置文件" class="headerlink" title="修改和保存配置文件"></a>修改和保存配置文件</h2><p>为了方便使用，需要修改 Transmission 的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /var/lib/transmission-daemon/.config/transmission-daemon/settings.json </span><br></pre></td></tr></table></figure><p>修改以下内容：</p><ul><li>**<code>rpc-password</code>**：设置管理密码。</li><li>**<code>rpc-username</code>**：设置管理用户名。</li><li>**<code>rpc-whitelist-enabled</code>**：改为 <code>false</code>，关闭白名单（允许任何 IP 访问）。</li></ul><p>修改完成后，保存并退出编辑器。<br><img src="https://image.liucf.com/images/2025/01/002f098e9c09ea105df2c03974a2da83.png" alt="image.png|300"></p><p><strong>重新加载配置：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload transmission-daemon  <span class="comment">#遇到web界面出现403错误也可以重新加载配置解决</span></span><br></pre></td></tr></table></figure><p>安装完毕后访问 Transmission 配置文件中指定的端口即可（默认是 9091）：<br><img src="https://image.liucf.com/images/2025/01/23c563fcbc3fd8791e871f7854c8dd5e.png" alt="image.png|300"><br><br></p><h2 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h2><p>到这一步我们就可以正常下种了，使用 <code>transmission-create</code> 命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transmission-create -p -t &lt;PT站的tracker地址&gt; -o &lt;种子文件名.torrent&gt; -s 2048 /var/lib/transmission-daemon/downloads/123 &amp;</span><br></pre></td></tr></table></figure><p><strong>参数解释</strong>：</p><ul><li><code>-p</code>：标记为私有种子（必须加）。</li><li><code>-t</code>：指定 PT 站的 tracker 地址（自行替换成实际的 tracker 地址，一般可以在 pt 站的新手教程里找到）。</li><li><code>-o</code>：指定生成的种子文件的保存路径和文件名，种子文件名（或要制作的文件夹）不能有特殊符号。</li><li><code>-s</code>：文件块大小，单位为 KB。<code>2048</code> 表示 2MB。</li><li>最后的路径 <code>/var/lib/transmission-daemon/downloads/123</code> 是源文件存放位置，可以是文件或目录，我一般会给整个目录加上””。</li><li><code>&amp;</code>：让命令在后台运行，避免关闭 SSH 会中断操作。</li></ul><br><br><h1 id="种子发布"><a href="#种子发布" class="headerlink" title="种子发布"></a>种子发布</h1><p>将在PT站中选择发布页，并将信息正确地填写完整即可发布，<strong>新手等级一般只能发在候选区</strong>，这里借用参考链接中的图片：<br><img src="https://image.liucf.com/images/2025/01/193dc41db715fa785b945eb88441c2a5.png" alt="image.png|300"><br><br><br><br></p><h1 id="种子下载和辅种"><a href="#种子下载和辅种" class="headerlink" title="种子下载和辅种"></a>种子下载和辅种</h1><p>辅种意思就是你本地资源和某个 PT 站的某个资源完全一样，然后你可以直接给这个资源辅种做种，不需要你从这个 PT 站下载这个资源再做种。</p><p>一般发布完种子后还需要自己重新进行下载 (或复制种子连接)进行辅种，<strong>辅种最重要的是检验，保存位置需要是源文件的位置</strong>。</p><h2 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h2><p>这里我使用的是 qBittorrent 来进行辅种，可以<strong>添加 Torrent链接或者添加 Torrent 文件</strong>：<br><img src="https://image.liucf.com/images/2025/01/dafff15db0a0e7631d8c9fae46ea4107.png" alt="image.png|300"><br><br></p><h2 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h2><p>例如我的源文件是掌控安全学院，文件路径是 <code>/root/掌控安全学院</code>，我只需设置保存路径为  <code>/root/</code> 即可完成校验，直接开始做种：<br><img src="https://image.liucf.com/images/2025/01/2af63f0c640109779d2b4792550b5477.png" alt="image.png|300"></p><ul><li>辅种的时候本地原始视频文件不能删除。</li></ul><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://blog.hgtrojan.com/index.php/archives/400/">VPS在线做PT种教程 - HgTrojan</a></li><li><a href="https://www.bilibili.com/opus/639414720861831171">PT站种子制作发布新手全攻略 - 哔哩哔哩</a></li><li><a href="http://www.ptyqm.com/31334.html">PT站点名词解释之-辅种，如何免校验进行辅种？ | PT邀请码网</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> PT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PT </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用bypy实现百度云盘文件上传与下载</title>
      <link href="/posts/2025/01/23/1661508139.html"/>
      <url>/posts/2025/01/23/1661508139.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我的需求是在一家 pt 站上传种子和做种，但是我的初始文件是在百度网盘中，我需要将文件传到我用来刷 pt 的 vps 中，才能进行后续操作。</p><p>对于有 GUI (图形用户界面) 的 linux 系统，想要使用百度网盘直接下载对应的客户端即可进行操作。<br>但是对于云服务器来说，下载客户端不太现实，好在 github 的开源项目 <a href="https://github.com/houtianze/bypy">bypy</a> 给出了使用命令行操作百度云盘的方法。<br><br></p><br><h1 id="安装与授权"><a href="#安装与授权" class="headerlink" title="安装与授权"></a>安装与授权</h1><p>安装和授权 bypy 参考 github 官方文档(上面贴的有链接)即可，也就是使用pip install bypy 进行安装，安装完成后第一次运行时需要授权，只需跑任何一个命令（比如 <code>bypy info</code>）然后跟着说明（登陆等）来授权即可。授权只需一次，一旦成功，以后不会再出现授权提示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pipx install bypy</span><br><span class="line">bypy info</span><br></pre></td></tr></table></figure><p><img src="https://image.liucf.com/images/2025/01/dddf0ea435ca0c209627273cabcf7bb4.png" alt="image.png|300"></p><p><img src="https://image.liucf.com/images/2025/01/24af269bb1bcead9ec41a41bfcaafd86.png" alt="image.png|300"><br>接着点击链接，登录百度云盘后，获取到授权码复制到界面中，再点击 Enter 即可。<br><img src="https://image.liucf.com/images/2025/01/051889ae2a3bb91f7e13a3fb406af8a6.png" alt="image.png|300"><br>提示是这样就表示授权成功了。</p><br><h2 id="pipx"><a href="#pipx" class="headerlink" title="pipx"></a>pipx</h2><p>和官方文档描述的不同，对于 bypy 的安装，我使用的是 pipx 来替代 pip，<code>pipx</code> 是一个用于隔离安装和运行 Python 命令行工具的工具。它会为每个安装的工具创建独立的虚拟环境，确保不同工具之间的依赖不会冲突。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install pipx</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置路径：</span></span><br><span class="line">pipx ensurepath</span><br></pre></td></tr></table></figure><p><img src="https://image.liucf.com/images/2025/01/dafc5a0a1d00dfdce7f71db3cb239e6f.png" alt="image.png|300"></p><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td><code>pipx install &lt;package_name&gt;</code></td><td>安装一个 Python 命令行工具，支持隔离的虚拟环境。</td></tr><tr><td><code>pipx run &lt;package_name&gt; [arguments]</code></td><td>临时运行一个工具，而不进行全局安装。</td></tr><tr><td><code>pipx list</code></td><td>列出通过 pipx 安装的所有工具及其依赖。</td></tr><tr><td><code>pipx uninstall &lt;package_name&gt;</code></td><td>删除指定工具及其虚拟环境。</td></tr><tr><td><code>pipx reinstall-all</code></td><td>重新安装所有工具（通常用于 Python 版本升级后）。</td></tr><tr><td><code>pipx upgrade &lt;package_name&gt;</code></td><td>升级指定工具到最新版本。</td></tr><tr><td><code>pipx upgrade-all</code></td><td>升级所有通过 pipx 安装的工具到最新版本。</td></tr><tr><td><code>pipx ensurepath</code></td><td>检查并确保 pipx 安装的工具路径添加到 <code>$PATH</code> 环境变量中。</td></tr><tr><td><code>pipx environment &lt;package_name&gt;</code></td><td>查看指定工具的虚拟环境详细信息。</td></tr><tr><td><code>pipx runpip &lt;package_name&gt; &lt;command&gt;</code></td><td>在工具的虚拟环境中直接运行 pip 命令。</td></tr><tr><td><code>pipx uninstall-all</code></td><td>卸载所有通过 pipx 安装的工具及其虚拟环境（慎用）。</td></tr><tr><td><code>pipx --version</code></td><td>查看 pipx 的版本号。</td></tr></tbody></table><h3 id="和-pip-区别"><a href="#和-pip-区别" class="headerlink" title="和 pip 区别"></a>和 pip 区别</h3><table><thead><tr><th>特性</th><th>pip</th><th>pipx</th></tr></thead><tbody><tr><td><strong>用途</strong></td><td>用于安装 Python 库或命令行应用程序，可以安装带 entry points 的库</td><td>专门用于安装和管理 Python 命令行工具，每个工具都在隔离的虚拟环境中运行</td></tr><tr><td><strong>虚拟环境</strong></td><td>不自动创建虚拟环境，需要手动使用 <code>venv</code> 或 <code>virtualenv</code> 创建</td><td>自动为每个安装的工具创建隔离的虚拟环境，避免依赖冲突</td></tr><tr><td><strong>全局命令</strong></td><td>安装的包通常是库，需要在 Python 代码中导入使用</td><td>安装的命令行工具可以全局调用，无需激活虚拟环境</td></tr><tr><td><strong>依赖管理</strong></td><td>依赖可能会影响全局 Python 环境或其他项目</td><td>依赖管理在隔离环境中进行，不会影响系统或其他项目</td></tr><tr><td><strong>安装命令</strong></td><td>使用 <code>pip install package_name</code> 命令安装包</td><td>使用 <code>pipx install package_name</code> 命令安装命令行工具</td></tr><tr><td><strong>升级和卸载</strong></td><td>需要手动管理包的升级和卸载</td><td>提供简单的命令来升级所有工具或卸载特定工具</td></tr><tr><td><strong>与 PyPI 集成</strong></td><td>直接从 PyPI 安装包</td><td>也从 PyPI 安装包，但专注于命令行工具</td></tr><tr><td><strong>用户权限</strong></td><td>可能需要管理员权限来安装全局包</td><td>通常不需要管理员权限，可以作为普通用户操作</td></tr><tr><td><strong>临时执行</strong></td><td>不支持临时执行环境</td><td>支持通过 <code>pipx run</code> 在临时环境中运行应用程序，无需安装</td></tr><tr><td><strong>多版本管理</strong></td><td>需要手动管理不同版本的包</td><td>自动处理不同版本的工具和它们的依赖，无需手动干预</td></tr><tr><td><strong>跨平台支持</strong></td><td>支持多个平台，但可能需要不同的包管理器</td><td>跨平台支持，包括 Linux、macOS 和 Windows</td></tr><tr><td><br></td><td></td><td></td></tr></tbody></table><br><h1 id="常用指令-1"><a href="#常用指令-1" class="headerlink" title="常用指令"></a>常用指令</h1><h2 id="列出目录内容"><a href="#列出目录内容" class="headerlink" title="列出目录内容"></a>列出目录内容</h2><blockquote><p>bypy list [远程目录]</p></blockquote><p>默认显示百度网盘 &#x2F;apps（就是“我的应用数据”）&#x2F;bypy 目录下的所有文件。<br>例如: bypy list &#x2F; 列出根目录内容，不加这个&#x2F;，也是默认根目录<br><img src="https://image.liucf.com/images/2025/01/1d05c90bd9e0942e3a8a3e3c89bdc464.png" alt="image.png|300"><br><img src="https://image.liucf.com/images/2025/01/9b099bfe236fa92a8496bbefcbfe07f8.png" alt="image.png|300"><br><img src="https://image.liucf.com/images/2025/01/b45cfa68ccd983c2cb1a636b72273a4c.png" alt="image.png|300"><br>bypy会在你的百度网盘里的这个目录里，我的应用数据&#x2F;bypy&#x2F;下面，所以如果你要把网盘的内容通过bypy放到服务器，需要现在网盘里把数据先移到bypy的目录下。同理，这里上传下载对应的目录都是我的应用数据&#x2F;bypy&#x2F;这里路径下。<br><br></p><h2 id="上传文件或目录"><a href="#上传文件或目录" class="headerlink" title="上传文件或目录"></a>上传文件或目录</h2><blockquote><p>bypy upload &lt;本地路径&gt; [远程目录]</p></blockquote><p>这是从云服务器上传文件到百度网盘。<br>测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bypy upload /root/data/bypy/1.txt /测试</span><br></pre></td></tr></table></figure><p><img src="https://image.liucf.com/images/2025/01/0fc932e1ac0f0b7b89f743eb2406d608.png" alt="image.png|300"><br><br></p><h2 id="下载文件或目录"><a href="#下载文件或目录" class="headerlink" title="下载文件或目录"></a>下载文件或目录</h2><h3 id="bypy-downfile"><a href="#bypy-downfile" class="headerlink" title="bypy downfile"></a>bypy downfile</h3><ul><li><strong>功能</strong>：下载远程的<strong>单个文件</strong>。</li><li><strong>用法</strong>：<code>bypy downfile &lt;remotefile&gt; [localpath]</code><ul><li><code>remotefile</code>：百度云上的目标文件路径（从应用根目录开始）。</li><li><code>localpath</code>：本地存储路径：<ul><li>如果以 <code>/</code> 或 <code>\</code> 结尾，表示下载到指定的本地目录。</li><li>如果是已存在的本地目录，也表示目标是该目录。</li><li>如果未指定，则默认存储在当前目录 <code>.</code>。</li><li>如果是一个新的路径（非目录），则表示存储为指定的文件名。</li></ul></li></ul></li><li><strong>特点</strong>：<ul><li>专用于下载单个文件。</li><li>提供了<strong>流式处理</strong>的能力，可以通过 <code>mkfifo</code> 管道结合 <code>omxplayer</code> 等工具直接播放流媒体。</li></ul></li></ul><h3 id="bypy-downdir"><a href="#bypy-downdir" class="headerlink" title="bypy downdir"></a>bypy downdir</h3><ul><li><strong>功能</strong>：递归下载远程的<strong>目录</strong>。</li><li><strong>用法</strong>：<code>bypy downdir [remotedir] [localdir]</code><ul><li><code>remotedir</code>：百度云上的目标目录路径（从应用根目录开始）。如果未指定，则默认是百度云的根目录。</li><li><code>localdir</code>：本地目标目录。如果未指定，默认为当前目录。</li></ul></li><li><strong>特点</strong>：<ul><li>专门用于下载整个目录，包括目录中的所有子目录和文件。</li><li>只能下载目录，不支持单个文件的操作。</li></ul></li></ul><h3 id="bypy-download"><a href="#bypy-download" class="headerlink" title="bypy download"></a>bypy download</h3><ul><li><strong>功能</strong>：根据远程路径（文件或目录）智能下载<strong>文件或目录</strong>。</li><li><strong>用法</strong>：<code>bypy download [remotepath] [localpath]</code><ul><li><code>remotepath</code>：百度云上的目标路径，可以是文件也可以是目录。如果未指定，默认是百度云的根目录。</li><li><code>localpath</code>：本地目标路径。如果未指定，默认是当前目录。</li></ul></li><li><strong>特点</strong>：<ul><li>既支持文件下载，也支持目录递归下载。</li><li>根据目标类型自动决定下载逻辑（文件&#x2F;目录）。</li></ul></li></ul><br><br><h1 id="全部指令"><a href="#全部指令" class="headerlink" title="全部指令"></a>全部指令</h1><p>显示使用帮助和所有命令（英文）：bypy</p><table><thead><tr><th><strong>命令</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>help &lt;command&gt;</code></td><td>显示指定命令的帮助信息</td></tr><tr><td><code>cdl_add &lt;source_url&gt; [save_path] [timeout]</code></td><td>添加离线下载任务</td></tr><tr><td><code>cdl_addmon &lt;source_url&gt; [save_path] [timeout]</code></td><td>添加并监控离线下载任务</td></tr><tr><td><code>cdl_cancel &lt;task_id&gt;</code></td><td>取消离线下载任务</td></tr><tr><td><code>cdl_list</code></td><td>列出所有离线下载任务</td></tr><tr><td><code>cdl_query &lt;task_ids&gt;</code></td><td>查询离线下载任务</td></tr><tr><td><code>cleancache</code></td><td>清除无效的哈希缓存</td></tr><tr><td><code>combine &lt;remotefile&gt; [localfile] [md5s]</code></td><td>合并文件切片</td></tr><tr><td><code>compare [remotedir] [localdir]</code></td><td>比较远程目录和本地目录</td></tr><tr><td><code>copy/cp &lt;from&gt; &lt;to&gt;</code></td><td>远程复制文件&#x2F;目录</td></tr><tr><td><code>delete/remove/rm &lt;remotepath&gt;</code></td><td>删除远程文件&#x2F;目录</td></tr><tr><td><code>downdir [remotedir] [localdir]</code></td><td>递归下载远程目录</td></tr><tr><td><code>downfile &lt;remotefile&gt; [localpath]</code></td><td>下载远程文件</td></tr><tr><td><code>download [remotepath] [localpath]</code></td><td>智能下载文件或目录</td></tr><tr><td><code>dumpcache</code></td><td>显示文件哈希缓存</td></tr><tr><td><code>list/ls [remotepath] [format] [sort] [order]</code></td><td>列出远程目录内容</td></tr><tr><td><code>listrecycle [start] [limit]</code></td><td>列出回收站内容</td></tr><tr><td><code>meta &lt;remotepath&gt; [format]</code></td><td>获取远程文件&#x2F;目录信息</td></tr><tr><td><code>mkdir &lt;remotedir&gt;</code></td><td>创建远程目录</td></tr><tr><td><code>move/mv/rename/ren &lt;from&gt; &lt;to&gt;</code></td><td>远程移动文件&#x2F;目录</td></tr><tr><td><code>quota/info</code></td><td>显示云存储配额</td></tr><tr><td><code>refreshtoken</code></td><td>刷新访问 token</td></tr><tr><td><code>restore &lt;remotepath&gt;</code></td><td>从回收站恢复文件</td></tr><tr><td><code>search &lt;keyword&gt; [remotepath] [recursive]</code></td><td>搜索远程文件</td></tr><tr><td><code>stream &lt;remotefile&gt; &lt;localpipe&gt; [format] [chunk]</code></td><td>流式处理远程文件（如视频&#x2F;音频）</td></tr><tr><td><code>syncdown [remotedir] [localdir] [deletelocal]</code></td><td>从远程同步到本地目录</td></tr><tr><td><code>syncup [localdir] [remotedir] [deleteremote]</code></td><td>从本地同步到远程目录</td></tr><tr><td><code>upload [localpath] [remotepath] [ondup]</code></td><td>上传文件或目录</td></tr><tr><td><code>whoami</code></td><td>显示用户信息</td></tr><tr><td><br></td><td></td></tr><tr><td><br></td><td></td></tr></tbody></table><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://github.com/houtianze/bypy">houtianze&#x2F;bypy: Python client for Baidu Yun (Personal Cloud Storage) 百度云&#x2F;百度网盘Python客户端</a></li><li><a href="https://blog.csdn.net/crazyjinks/article/details/140290187">https://blog.csdn.net/crazyjinks/article/details/140290187</a></li><li><a href="https://blog.csdn.net/PolarisRisingWar/article/details/121887801">bypy：使用Linux命令行上传及下载百度云盘文件（远程服务器大文件传输必备）-CSDN博客</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器 </tag>
            
            <tag> 实用工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Spring Boot的健身房场馆预约系统</title>
      <link href="/posts/2024/10/30/1262640889.html"/>
      <url>/posts/2024/10/30/1262640889.html</url>
      
        <content type="html"><![CDATA[<h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><p>​<strong>React</strong>（也称为React.js或ReactJS）是一个自由及开放源代码的前端JavaScript工具库，用于基于UI组件构建用户界面。它由Meta（前身为Facebook）和由个人开发者和公司组成的社群维护。React可用作开发具有Next.js等框架的单页、手机或服务器渲染应用程序的基础。然而，React只专注状态管理和将状态渲染到DOM，因此创建React应用程序通常需要使用额外的工具库来进行路由实现，以及某些客户端功能。</p><p>​<strong>Spring Boot</strong>是一个开放源代码Java 框架，用于开发独立、产品等级的Spring应用程序，和节省开发人员工作量。Spring Boot使用约定优于配置设计模式，在Java平台帮助最少化配置设定，开发Spring为基础的应用程序。大部分应用程序可以被预先配置，使用Spring团队的”专业意见”应用最好的设定，和使用Spring平台及第三方函式库。</p><br><br><h1 id="总体设计"><a href="#总体设计" class="headerlink" title="总体设计"></a>总体设计</h1><h2 id="设计结构"><a href="#设计结构" class="headerlink" title="设计结构"></a>设计结构</h2><p>系统层次结构图如下：</p><p><img src="https://img.liuyueyue.top//xl990c3343746b222872d041334d8d1cb9.png" alt="image-20210125203309103"></p><blockquote><p><strong>管理功能都是仅管理员可见</strong></p></blockquote><br><p>主要功能模块如下：</p><ul><li><p>管理员登录模块</p></li><li><p>会员管理模块</p></li><li><p>教练管理模块</p></li><li><p>课程管理模块</p></li><li><p>课程预约管理</p></li><li><p>器材管理模块</p></li><li><p>物品遗失管理模块</p></li><li><p>商品管理模块</p></li><li><p>信息统计模块</p><blockquote><p>使用各种图表（如饼状图）来展示每个月的收入</p></blockquote></li></ul><br><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul><li><p>React 18.2.0</p></li><li><p>Node.js 20.10.0</p></li><li><p>Ant Design Pro 6.0.0</p></li><li><p>antd 5.2.2</p></li><li><p>Type Script</p></li><li><p>Prettier</p></li><li><p>Eslint</p></li></ul><br><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><ul><li><p>java</p></li><li><p>spring</p></li><li><p>springmvc</p></li><li><p>mybatis</p></li><li><p>mybatis-plus</p></li><li><p>springboot</p></li><li><p>junit 单元测试库</p></li><li><p>mysql 数据库</p></li><li><p>redis</p></li><li><p>maven</p></li></ul><br><br><h1 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h1><h1 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h1><h2 id="库表设计"><a href="#库表设计" class="headerlink" title="库表设计"></a>库表设计</h2><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><p><a href="https://zh.wikipedia.org/wiki/React">https://zh.wikipedia.org/wiki/React</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/Spring_Boot">https://zh.wikipedia.org/wiki/Spring_Boot</a></p></li><li><p><a href="https://www.cnblogs.com/chuanfeng/p/14329428.html">基于SpringBoot的健身房管理系统 - 程序猿刘川枫 - 博客园</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 毕业论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日总结</title>
      <link href="/posts/2024/10/22/3173242249.html"/>
      <url>/posts/2024/10/22/3173242249.html</url>
      
        <content type="html"><![CDATA[<p>2024.10.22总结</p><span id="more"></span><p>​今天只完成了一篇博客，就是这篇日记，还有学了一个多小时的Spring，半小时的左耳听风，其他就是看衣服买东西啥的，还有看番茄小说和打王者，效率很低，希望明天可以提供效率。</p>]]></content>
      
      
      <categories>
          
          <category> 每日总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 每日总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian12安装Docker</title>
      <link href="/posts/2024/06/04/3926299118.html"/>
      <url>/posts/2024/06/04/3926299118.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​Docker 是一个开源的平台，用于开发、部署和运行应用程序。它利用容器技术来实现这一点，容器是一种轻量级的虚拟化方式，可以在单个操作系统内核上运行多个独立的应用程序实例。</p><p>​用Docker来做项目很方便，管理起来很方便，所以后续大部分项目我应该都会使用docker来进行构建。</p><br><br><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>先安装一些必要的软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade -y</span><br><span class="line">apt install curl vim wget gnupg dpkg apt-transport-https lsb-release ca-certificates</span><br></pre></td></tr></table></figure><br><br><h1 id="下载GPG公钥"><a href="#下载GPG公钥" class="headerlink" title="下载GPG公钥"></a>下载GPG公钥</h1><p>GPG密钥用于<strong>验证从该存储库下载的Docker镜像的完整性和真实性</strong>。</p><p> 这可以防止恶意软件或篡改的软件包被安装到系统中。</p><p>现在运行以下命令为 Docker 存储库设置 GPG 密钥，该密钥将存储在 <em>&#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;</em> 目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录并设置权限</span></span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 Docker 的 GPG 公钥并保存到 /etc/apt/keyrings 目录</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 GPG 公钥文件的权限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.gpg</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604145701978.png" alt="image-20240604145701978"></p><br><br><h1 id="添加Docker-APT仓库"><a href="#添加Docker-APT仓库" class="headerlink" title="添加Docker APT仓库"></a>添加Docker APT仓库</h1><p>执行以下命令为 Debian 系统添加 Docker 存储库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加 Docker 仓库并指定 GPG 公钥文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604150112059.png" alt="image-20240604150112059"></p><br><br><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><p>通过下面的 apt 命令安装 Docker Engine。此命令还将安装 Containerd（默认容器引擎）、Docker <strong>buildx</strong> 插件作为默认构建具有 BuildKit 功能的插件，以及 Docker <strong>compose</strong> 作为插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p>安装Docker后，运行以下命令检查版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604151559450.png" alt="image-20240604151559450"></p><br><br><h1 id="安装Docker-Compose"><a href="#安装Docker-Compose" class="headerlink" title="安装Docker Compose"></a>安装Docker Compose</h1><p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。</p><p>因为我们已经安装了 <code>docker-compose-plugin</code>，所以 Docker 目前已经自带 <code>docker compose</code> 命令，基本上可以替代 <code>docker-compose</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@GreenCloud:~<span class="comment"># docker compose version</span></span><br><span class="line">Docker Compose version v2.27.0</span><br></pre></td></tr></table></figure><p>如果某些镜像或命令不兼容，则我们还可以单独安装 Docker Compose。</p><p>我们可以使用 Docker 官方发布的 <a href="https://github.com/docker/compose">Github</a> 直接安装最新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>此时可以使用 <code>docker-compose version</code> 命令检查是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@GreenCloud:~<span class="comment"># docker-compose version</span></span><br><span class="line">Docker Compose version v2.27.1</span><br></pre></td></tr></table></figure><br><br><h1 id="修改Docker配置"><a href="#修改Docker配置" class="headerlink" title="修改Docker配置"></a>修改Docker配置</h1><ol><li><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li></ol><br><br><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载旧版本（如果有）</span></span><br><span class="line">apt-get remove docker docker-engine docker.io containerd runc</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看docker是否卸载干净</span></span><br><span class="line">dpkg -l | grep docker</span><br><span class="line">dpkg -l |grep ^rc|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> |sudo xargs dpkg -P <span class="comment"># 删除无用的相关的配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除docker的相关配置&amp;目录</span></span><br><span class="line"><span class="built_in">rm</span> -rf /etc/systemd/system/docker.service.d</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#确定docker卸载完毕</span></span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.laoda.de/archives/hello-docker">【Docker系列】不用宝塔面板，小白一样可以玩转VPS服务器！-我不是咕咕鸽 (laoda.de)</a></p><p><a href="https://cn.linux-console.net/?p=30707">如何在 Debian 12 上安装和使用 Docker (linux-console.net)</a></p><p><a href="https://u.sb/debian-install-docker/">Debian 12 &#x2F; Ubuntu 22.04 安装 Docker 以及 Docker Compose 教程 - 烧饼博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Debian </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Nginx Proxy Manager</title>
      <link href="/posts/2024/06/04/3539346108.html"/>
      <url>/posts/2024/06/04/3539346108.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Nginx Proxy Manager是一个<strong>基于Docker</strong>的轻量级、高性能的Web代理（同时也包括反向代理）和电子邮件代理。它具有用户友好的界面，可以很容易地创建和管理Nginx代理主机。</p><p>它的特点包括：</p><ul><li>简易的用户界面：对于不熟悉Nginx配置文件的用户来说，Nginx Proxy Manager提供了一个直观的界面，可以轻松地创建和管理Nginx代理主机。</li><li>SSL支持：Nginx Proxy Manager支持Let’s Encrypt，可以自动获取和续订SSL证书，保证通信的安全性。</li><li>支持Websockets：Nginx Proxy Manager完全支持Websockets，这是许多现代Web应用所需要的。</li><li>访问控制：可以对访问进行控制，例如，可以设置基本的HTTP认证，或者根据IP地址进行限制。</li><li>支持HTTP&#x2F;2：Nginx Proxy Manager支持HTTP&#x2F;2，可以提供更高的传输效率。</li><li>自定义Nginx配置：尽管Nginx Proxy Manager已经为大部分用途提供了默认的配置，但如果需要，还可以提供自定义Nginx配置。</li><li>Docker支持：Nginx Proxy Manager是基于Docker的，这意味着你可以在任何支持Docker的平台上运行它。</li><li>100%免费和开源：Nginx Proxy Manager是开源的，可以自由使用和修改。</li></ul><br><br><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br></pre></td></tr></table></figure><p>这边我们直接用 docker 的方式安装。</p><p>创建yml文件，写入下面的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span>  <span class="comment"># 保持默认即可，不建议修改左侧的80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;81:81&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span> <span class="comment"># 保持默认即可，不建议修改左侧的443</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span> <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span>  <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 letsencrypt 文件夹中</span></span><br></pre></td></tr></table></figure><br><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>因为我安装了ufw防火墙，所以需要配置一下防火墙规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 81/tcp comment <span class="string">&#x27;npm&#x27;</span></span><br><span class="line">ufw status</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604164248513.png" alt="image-20240604164248513"></p><br><h2 id="检测端口"><a href="#检测端口" class="headerlink" title="检测端口"></a>检测端口</h2><p>查看端口是否被占用（以 81 为例），输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:81  </span><br><span class="line"><span class="comment">#查看 81 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure><p>如果啥也没出现，表示端口未被占用</p><p>如果出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure><br><h2 id="运行并访问"><a href="#运行并访问" class="headerlink" title="运行并访问"></a>运行并访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm   </span><br><span class="line"><span class="comment"># 来到 dockercompose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604165155521.png" alt="image-20240604165155521"></p><p>运行成功我们就可以输入 <a href="http://ip:81/">http://ip:81</a> 访问了。</p><p><img src="https://img.liuyueyue.top//xlimage-20240604165313375.png" alt="image-20240604165313375"></p><p>默认登陆名和密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Email:    admin@example.com</span><br><span class="line">Password: changeme</span><br></pre></td></tr></table></figure><br><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>先设置用户名和邮箱</p><p><img src="https://img.liuyueyue.top//xlimage-20240604165711700.png" alt="image-20240604165711700"></p><p><img src="https://img.liuyueyue.top//xlimage-20240604165905837.png" alt="image-20240604165905837"></p><p>接着修改默认密码：</p><p><img src="https://img.liuyueyue.top//xlimage-20240604170022911.png" alt="image-20240604170022911"></p><p>至此，已经完成了安装。</p><p><img src="https://img.liuyueyue.top//xlimage-20240604170247284.png" alt="image-20240604170247284"></p><br><br><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/npm /root/data/docker_data/npm.archive  </span><br><span class="line"><span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    </span><br><span class="line"><span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  </span><br><span class="line"><span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure><br><br><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/npm  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.laoda.de/archives/nginxproxymanager">【Docker系列】一个反向代理神器——Nginx Proxy Manager-我不是咕咕鸽 (laoda.de)</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian12安装Nginx</title>
      <link href="/posts/2024/05/14/1079937748.html"/>
      <url>/posts/2024/05/14/1079937748.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​还是因为最近在做项目，部署前端项目会用到Nginx，所以来记录一下安装的过程，我的安装方式是<strong>编译安装</strong>。</p><p>​我的设备是阿里云2核4G的云服务器，系统是DD之后的Debian12，远程连接工具是FinalShell。</p><br><br><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Nginx（发音同engine x）是一个异步框架的 Web 服务器，也可以用作反向代理，负载平衡器 和 HTTP 缓存。该软件由 <a href="https://zh.wikipedia.org/wiki/%E4%BC%8A%E6%88%88%E7%88%BE%C2%B7%E8%B3%BD%E7%B4%A2%E8%80%B6%E5%A4%AB">Igor Sysoev</a> 创建，并于2004年首次公开发布。同名公司成立于2011年，以提供支持。</p><p>Nginx 是一款免费的开源软件，根据类 BSD 许可证的条款发布。一大部分Web服务器使用 Nginx ，通常作为负载均衡器。</p><br><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>更快：<ul><li>单次请求会得到更快的响应。</li><li>在高并发环境下，Nginx 比其他 WEB 服务器有更快的响应。</li></ul></li><li>高扩展性：<ul><li>Nginx 是基于模块化设计，由多个耦合度极低的模块组成，因此具有很高的扩展性。许多高流量的网站都倾向于开发符合自己业务特性的定制模块。</li></ul></li><li>高可靠性：<ul><li>Nginx 的可靠性来自于其核心框架代码的优秀设计，模块设计的简单性。另外，官方提供的常用模块都非常稳定，每个 worker 进程相对独立，master 进程在一个 worker 进程出错时可以快速拉起新的 worker 子进程提供服务。</li></ul></li><li>低内存消耗：<ul><li>一般情况下，10000个非活跃的 <code>HTTP Keep-Alive</code> 连接在 Nginx 中仅消耗 <code>2.5MB</code> 的内存，这是 Nginx 支持高并发连接的基础。</li><li>单机支持10万以上的并发连接：<strong>理论上，Nginx 支持的并发连接上限取决于内存，10万远未封顶。</strong></li></ul></li><li>热部署:<ul><li>master 进程与 worker 进程的分离设计，使得 Nginx 能够提供热部署功能，即在 7x24 小时不间断服务的前提下，升级 Nginx 的可执行文件。当然，它也支持不停止服务就更新配置项，更换日志文件等功能。</li></ul></li><li>最自由的 BSD 许可协议:<ul><li>这是 Nginx 可以快速发展的强大动力。BSD 许可协议不只是允许用户免费使用 Nginx ，它还允许用户在自己的项目中直接使用或修改 Nginx 源码，然后发布。</li></ul></li></ul><br><br><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p><strong>编译安装时，需要自行安装：<code>gcc</code>、<code>pcre</code>、<code>zlib</code>以及<code>openssl</code></strong></p><br><h2 id="安装gcc编译器"><a href="#安装gcc编译器" class="headerlink" title="安装gcc编译器"></a>安装gcc编译器</h2><p>首先，我们需要安装gcc编译器用于<code>make</code>编译，Debian可以通过安装<code>build-essential</code>来安装GCC编译器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install -y build-essential</span><br><span class="line"></span><br><span class="line">apt show build-essential | grep Version  <span class="comment">#显示版本信息</span></span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240514205043085.png" alt="image-20240514205043085"></p><br><h2 id="安装正则库"><a href="#安装正则库" class="headerlink" title="安装正则库"></a>安装正则库</h2><p>正则库很关键，我们使用Nginx，在配置文件内<code>location</code>进行目录匹配，就需要正则库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libpcre3 libpcre3-dev</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240514205554733.png" alt="image-20240514205554733"></p><br><h2 id="安装zlib库"><a href="#安装zlib库" class="headerlink" title="安装zlib库"></a>安装zlib库</h2><p>Nginx编译过程和Http相应过程还需要<code>gzip</code>格式的压缩，所以我们还需要安装<code>zlib库</code>用于对HTTP包的内容做gzip格式的压缩。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y zlib1g-dev</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240514210102539.png" alt="image-20240514210102539"></p><br><h2 id="安装OpenSSL库"><a href="#安装OpenSSL库" class="headerlink" title="安装OpenSSL库"></a>安装OpenSSL库</h2><p>最后，现在SSL协议很重要，Chrome等主流浏览器，都开始默认相应HTTPS了，所以OpenSSL编译环境也很重要。</p><p><img src="https://img.liuyueyue.top//xlimage-20240514213453449.png" alt="image-20240514213453449"></p><br><br><h1 id="下载Nginx源码"><a href="#下载Nginx源码" class="headerlink" title="下载Nginx源码"></a>下载Nginx源码</h1><p>进入Nginx官网：<a href="http://nginx.org/en/download.html">nginx: download</a></p><p><img src="https://img.liuyueyue.top//xlimage-20240514221108591.png" alt="image-20240514221108591"></p><p>我们可以看到稳定版本是1.26。</p><p>先进入&#x2F;usr&#x2F;local&#x2F;src目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line"><span class="comment"># 下载源码</span></span><br><span class="line">wget http://nginx.org/download/nginx-1.26.0.tar.gz</span><br><span class="line"><span class="comment"># 解压源码</span></span><br><span class="line">tar -xf nginx-1.26.0.tar.gz</span><br><span class="line"><span class="comment"># 进入源代码内</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.26.0</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515013303696.png" alt="image-20240515013303696"></p><br><br><h1 id="配置和编译"><a href="#配置和编译" class="headerlink" title="配置和编译"></a>配置和编译</h1><p>接下来就是make环节，编译时候的参数可以参考<a href="https://xuexb.github.io/learn-nginx/guide/nginx-configure-descriptions.html#%E5%91%BD%E4%BB%A4">Nginx 编译参数 | Nginx 入门教程 (xuexb.github.io)</a>，和<a href="http://nginx.org/en/docs/configure.html">官方文档</a>。</p><p>先创建一个用户’www’，我设置的是这个用户不能登录系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -s /sbin/nologin www</span><br></pre></td></tr></table></figure><p>下面是我编译时候借鉴的参数，直接复制到终端执行就可以了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \</span><br><span class="line">--user=www \</span><br><span class="line">--group=www \</span><br><span class="line">--sbin-path=/usr/local/nginx/sbin/nginx \</span><br><span class="line">--conf-path=/usr/local/nginx/nginx.conf \</span><br><span class="line">--error-log-path=/var/log/nginx/error.log \</span><br><span class="line">--http-log-path=/var/log/nginx/access.log \</span><br><span class="line">--pid-path=/var/run/nginx.pid \</span><br><span class="line">--lock-path=/var/run/nginx.lock \</span><br><span class="line">--http-client-body-temp-path=/var/cache/nginx/client_temp \</span><br><span class="line">--http-proxy-temp-path=/var/cache/nginx/proxy_temp \</span><br><span class="line">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \</span><br><span class="line">--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \</span><br><span class="line">--http-scgi-temp-path=/var/cache/nginx/scgi_temp \</span><br><span class="line">--with-file-aio \</span><br><span class="line">--with-threads \</span><br><span class="line">--with-http_addition_module \</span><br><span class="line">--with-http_auth_request_module \</span><br><span class="line">--with-http_dav_module \</span><br><span class="line">--with-http_flv_module \</span><br><span class="line">--with-http_gunzip_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-http_mp4_module \</span><br><span class="line">--with-http_random_index_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_secure_link_module \</span><br><span class="line">--with-http_slice_module \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_sub_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-mail \</span><br><span class="line">--with-mail_ssl_module \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-stream_realip_module \</span><br><span class="line">--with-stream_ssl_module \</span><br><span class="line">--with-stream_ssl_preread_module</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515013825919.png" alt="image-20240515013825919"></p><p>如果没有问题，会提示信息：</p><p><img src="https://img.liuyueyue.top//xlimage-20240514224438415.png" alt="image-20240514224438415"></p><p>没有报错信息就可以编译了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515172237944.png" alt="image-20240515172237944"></p><br><br><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515014124128.png" alt="image-20240515014124128"></p><p><img src="https://img.liuyueyue.top//xlimage-20240515014237588.png" alt="image-20240515014237588"></p><br><h2 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h2><p>我们使用<code>systemctl</code>对Nginx进行管理：</p><ul><li><code>systemctl start nginx</code>：启动Nginx服务。</li><li><code>systemctl reload nginx</code>：Nginx配置重载。</li><li><code>systemctl stop nginx</code>：停止Nginx服务。</li><li><code>systemctl daemon-reload</code>:重新加载 systemd 管理的单元文件。</li></ul><p>创建<code>systemctl</code>守护，管理Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240514233857228.png" alt="image-20240514233857228"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>启动一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload  </span><br><span class="line">systemctl start nginx    </span><br><span class="line">systemctl status nginx.service </span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515014806055.png" alt="image-20240515014806055"></p><p>启动出现了报错，缺少&#x2F;var&#x2F;cache&#x2F;nginx目录，添加上即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /var/cache/nginx</span><br><span class="line">systemctl start nginx</span><br><span class="line">lsof -i:80 <span class="comment">#显示当前系统中占用端口 80 的进程信息</span></span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515014949726.png" alt="image-20240515014949726"></p><br><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>在命令行输入nginx，会报错，说找不到命令，需要加入环境变量</p><p><img src="https://img.liuyueyue.top//xlimage-20240515110617531.png" alt="image-20240515110617531"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="comment"># 按下shift+g将光标定位到最后一行，新增以下内容：</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/nginx/sbin</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515112152620.png" alt="image-20240515112152620"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile  <span class="comment">#使文件生效</span></span><br><span class="line">nginx  <span class="comment">#没有报错，环境变量配置完毕</span></span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515112701111.png" alt="image-20240515112701111"></p><br><br><h1 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h1><p>按我的方法编译，那么，需要注意。</p><ul><li><code>/usr/local/nginx</code>：为Nginx编译安装的地址。</li><li><code>/usr/local/nginx/nginx.conf</code>：Nginx默认配置文件。</li></ul><br><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>写一个HelloWorld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/nginx</span><br><span class="line">vim nginx.conf  <span class="comment">#编辑配置文件</span></span><br></pre></td></tr></table></figure><p>指向目录<code>/www</code>：</p><p><img src="https://img.liuyueyue.top//xlimage-20240515004556664.png" alt="image-20240515004556664"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">mkdir</span> /www</span><br><span class="line"><span class="built_in">cd</span> www</span><br><span class="line">vim index.html</span><br></pre></td></tr></table></figure><p>重载Nginx配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><p>最后，浏览器访问成功：</p><p><img src="https://img.liuyueyue.top//xlimage-20240515015130758.png" alt="image-20240515015130758"></p><br><br><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><h2 id="端口被占用"><a href="#端口被占用" class="headerlink" title="端口被占用"></a>端口被占用</h2><p>systemctl start nginx，报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Job <span class="keyword">for</span> nginx.service failed because the control process exited with error code.</span><br><span class="line">See <span class="string">&quot;systemctl status nginx.service&quot;</span> and <span class="string">&quot;journalctl -xeu nginx.service&quot;</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><p>systemctl reload nginx，报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.service is not active, cannot reload.</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515105242239.png" alt="image-20240515105242239"></p><p>接着我们使用systemctl status nginx.service来查看一下当前状态</p><p><img src="https://img.liuyueyue.top//xlimage-20240515105448102.png" alt="image-20240515105448102"></p><p>发现处于<strong>inactive</strong>状态，说明启动失败了。</p><p>可以看到可能是因为端口号被占用了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp | grep 80        <span class="comment">#查看端口号是否被占用</span></span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240515105835781.png" alt="image-20240515105835781"></p><p>发现端口被占用，使用kill来杀死进程后，重新启动即可。</p><br><br><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止Nginx服务</span></span><br><span class="line">systemctl stop nginx</span><br><span class="line"><span class="comment"># 删除Nginx服务</span></span><br><span class="line"><span class="built_in">rm</span> -rf /usr/lib/systemd/system/nginx.service</span><br><span class="line"><span class="comment"># 重载配置</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment"># 删除Nginx编译文件</span></span><br><span class="line"><span class="built_in">rm</span> -rf nginx</span><br></pre></td></tr></table></figure><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://juejin.cn/post/7061998261904605214">详解Debian系统上如何编译安装Nginx - 掘金 (juejin.cn)</a></p><p><a href="https://xuexb.github.io/learn-nginx/guide/">Nginx 简介 | Nginx 入门教程 (xuexb.github.io)</a></p><p><a href="https://blog.csdn.net/Fang_20/article/details/130136727">使用systemctl reload nginx重启Nginx服务报错【Job for nginx.service invalid】_job for nginx.service invalid.-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian12安装MySQL</title>
      <link href="/posts/2024/05/12/3886968423.html"/>
      <url>/posts/2024/05/12/3886968423.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​因为最近在做项目，需要测试一下线上环境，所以要使用到MySQL数据库，我尽量和本地数据库版本保持一致，下载的也会是8.0版本。</p><p>​我的设备是阿里云2核4G的云服务器，系统是DD之后的Debian12，远程连接工具是FinalShell，安装完成后记得配置一下阿里云的安全组，打开3306端口。</p><br><br><h1 id="配置-MySQL-存储库"><a href="#配置-MySQL-存储库" class="headerlink" title="配置 MySQL 存储库"></a>配置 MySQL 存储库</h1><p>访问<a href="https://dev.mysql.com/downloads/repo/apt/">Debian最新的配置源</a>，复制到下面的配置中。</p><p>目前最新的是<strong>mysql-apt-config_0.8.30-1_all.deb</strong></p><p>要将 MySQL APT 存储库添加到系统，请转到存储库下载页面并使用以下 wget 命令下载最新的发行包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update   </span><br><span class="line">wget https://dev.mysql.com/get/mysql-apt-config_0.8.30-1_all.deb</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513000543472.png" alt="image-20240513000543472"></p><p>下载完成后，以具有 sudo 权限的用户身份安装发行包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i mysql-apt-config_0.8.30-1_all.deb</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513001638021.png" alt="image-20240513001638021"></p><p>提示需要安装gnupg。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnupg</span><br></pre></td></tr></table></figure><p>安装后继续执行：</p><p><img src="https://img.liuyueyue.top//xlimage-20240513001840666.png" alt="image-20240513001840666"></p><p>我们点进去，发现可以选择8.0版本</p><p><img src="https://img.liuyueyue.top//xlimage-20240513002213551.png" alt="image-20240513002213551"></p><p>然后选择OK</p><p><img src="https://img.liuyueyue.top//xlimage-20240513002445159.png" alt="image-20240513002445159"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513002724887.png" alt="image-20240513002724887"></p><br><br><h1 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h1><p>通过运行以下命令更新包列表并安装 MySQL 服务器包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513003313187.png" alt="image-20240513003313187"></p><p>直接报错，没找到这个包。</p><p>经过搜索之后，发现需要更新软件包（我只是开始更新了一次）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update </span><br><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure><p>吐槽一下，带宽太低了，安装了好长时间。。。</p><p>接下来就是设置密码：</p><p><img src="https://img.liuyueyue.top//xlimage-20240513081610751.png" alt="image-20240513081610751"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513081626305.png" alt="image-20240513081626305"></p><p>按Tab或者小键盘右键（End）可以选中OK，然后<strong>密码留空</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20240513082512768.png" alt="image-20240513082512768"></p><p>然后直接Tab，选择OK</p><p><img src="https://img.liuyueyue.top//xlimage-20240513082606857.png" alt="image-20240513082606857"></p><p>接着选择使用强密码加密</p><p><img src="https://img.liuyueyue.top//xlimage-20240513082726323.png" alt="image-20240513082726323"></p><p>安装完成后， MySQL 服务将自动启动，您可以通过键入以下内容来验证它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513083222950.png" alt="image-20240513083222950"></p><br><br><h1 id="保护-MySQL"><a href="#保护-MySQL" class="headerlink" title="保护 MySQL"></a>保护 MySQL</h1><p>运行该 mysql_secure_installation 命令设置 root 密码并提高 MySQL 安装的安全性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513084243290.png" alt="image-20240513084243290"></p><p>询问是否要启用密码验证组件。如果你想启用这个组件，可以按下 <code>y</code> 或 <code>Y</code>。如果不想启用，可以按下任意其他键。</p><p>这里我直接回车。</p><p><img src="https://img.liuyueyue.top//xlimage-20240513084539811.png" alt="image-20240513084539811"></p><p>这里我输入了密码，但是报错了。</p><p>提示SET PASSWORD对用户“root”@’localhost“没有意义，因为使用的身份验证方法不会将身份验证数据存储在MySQL服务器中。如果要更改身份验证参数，请考虑改用 ALTER USER。</p><br><h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><p>上面的界面可以直接关闭了，打开一个新的终端界面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513084840471.png" alt="image-20240513084840471"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;%&#x27; - 所有情况都能访问</span><br><span class="line">&#x27;localhost&#x27; - 本机才能访问</span><br><span class="line">&#x27;<span class="number">111</span>.<span class="number">222</span>.<span class="number">33</span>.<span class="number">44</span>&#x27; - 指定 ip 才能访问</span><br></pre></td></tr></table></figure><p>接下来修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513085251082.png" alt="image-20240513085251082"></p><p>输入exit返回终端后，再运行mysql_secure_installation。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">root@iZf8z2vb82x33szfaz267uZ:~<span class="comment"># sudo mysql_secure_installation</span></span><br><span class="line"></span><br><span class="line">Securing the MySQL server deployment.</span><br><span class="line"></span><br><span class="line">Enter password <span class="keyword">for</span> user root: </span><br><span class="line"></span><br><span class="line">VALIDATE PASSWORD COMPONENT can be used to <span class="built_in">test</span> passwords</span><br><span class="line">and improve security. It checks the strength of password</span><br><span class="line">and allows the <span class="built_in">users</span> to <span class="built_in">set</span> only those passwords <span class="built_in">which</span> are</span><br><span class="line">secure enough. Would you like to setup VALIDATE PASSWORD component?</span><br><span class="line"></span><br><span class="line">Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No: n</span><br><span class="line">Using existing password <span class="keyword">for</span> root.</span><br><span class="line">Change the password <span class="keyword">for</span> root ? ((Press y|Y for Yes, any other key for No) : n</span><br><span class="line"></span><br><span class="line"> ... skipping.</span><br><span class="line">By default, a MySQL installation has an anonymous user,</span><br><span class="line">allowing anyone to log into MySQL without having to have</span><br><span class="line">a user account created for them. This is intended only for</span><br><span class="line">testing, and to make the installation go a bit smoother.</span><br><span class="line">You should remove them before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line">Remove anonymous users? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from</span><br><span class="line">&#x27;localhost&#x27;. This ensures that someone cannot guess at</span><br><span class="line">the root password from the network.</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">By default, MySQL comes with a database named &#x27;test&#x27; that</span><br><span class="line">anyone can access. This is also intended only for testing,</span><br><span class="line">and should be removed before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line"> - Dropping test database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"> - Removing privileges on test database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes</span><br><span class="line">made so far will take effect immediately.</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">All done! </span><br></pre></td></tr></table></figure><br><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p>修改用户密码，记得<strong>先登录mysql的root用户</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;用户名&#x27;@&#x27;%&#x27; identified by &#x27;密码&#x27;;</span><br><span class="line">alter user &#x27;用户名&#x27;@&#x27;%&#x27; identified with mysql_native_password BY &#x27;密码&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513133133016.png" alt="image-20240513133133016"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513133213087.png" alt="image-20240513133213087"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513133718587.png" alt="image-20240513133718587"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513133812896.png" alt="image-20240513133812896"></p><br><br><h1 id="操作-MySQL"><a href="#操作-MySQL" class="headerlink" title="操作 MySQL"></a>操作 MySQL</h1><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513105920061.png" alt="image-20240513105920061"></p><br><h2 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a>创建新用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#默认</span><br><span class="line">create user &#x27;用户名&#x27;@&#x27;%&#x27; identified by &#x27;密码&#x27;;</span><br><span class="line">#指定mysql_native_password插件</span><br><span class="line">create user &#x27;用户名&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;密码&#x27;;</span><br></pre></td></tr></table></figure><p>先使用mysql -uroot -p进行登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create user &#x27;lcf&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">create user &#x27;lyy&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513112248083.png" alt="image-20240513112248083"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513113249440.png" alt="image-20240513113249440"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513175117547.png" alt="image-20240513175117547"></p><p>我们可以看到lcf和lyy的<strong>密码插件不同</strong>。</p><br><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on database_name.* to &#x27;username&#x27;@&#x27;%&#x27;;</span><br><span class="line">-- &#x27;database_name&#x27; - 赋予权限的数据库名称</span><br><span class="line">-- &#x27;username&#x27; - 用户名</span><br><span class="line">-- &#x27;localhost&#x27; - 用户只能在本地访问数据库</span><br><span class="line"></span><br><span class="line"># 全部数据库</span><br><span class="line">grant all privileges on *.* to &#x27;username&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><p>这个命令的效果是将对指定数据库的所有权限授予给特定用户，使该用户能够从任何主机连接并对数据库进行操作。</p><p><img src="https://img.liuyueyue.top//xlimage-20240513162440184.png" alt="image-20240513162440184"></p><br><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">delete from mysql.user where user=&#x27;用户名&#x27;;</span><br><span class="line"></span><br><span class="line">delete from mysql.user where user=&#x27;lyy&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513164559362.png" alt="image-20240513164559362"></p><br><br><h1 id="配置-MySQL"><a href="#配置-MySQL" class="headerlink" title="配置 MySQL"></a>配置 MySQL</h1><h2 id="大小写不敏感"><a href="#大小写不敏感" class="headerlink" title="大小写不敏感"></a>大小写不敏感</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><p>配置这个属性很重要，我这里只介绍安装后再修改配置的方法，<strong>在安装后再修改配置（会删除原有的数据和设置）</strong>，所以需要谨慎使用。</p><p>在 MySQL 8 中，数据目录初始化之后，不再允许更改lower_case_table_names &#x3D; 1的值；</p><p>MySQL 基于某些原因，禁止在重新启动 MySQL 服务时将<code> lower_case_table_names</code> 设置 成不同于初始化 MySQL 服务时设置的 lower_case_table_names 值。</p><p>也就是说启动（重启）MySQL 时，<code>lower_case_table_names</code>的值必须与初始化 MySQL 时（安装 MySQL 后的首次启动）的值相同。</p><br><h3 id="查看现有配置"><a href="#查看现有配置" class="headerlink" title="查看现有配置"></a>查看现有配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#x27;%case%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513164816151.png" alt="image-20240513164816151"></p><ul><li>lower_case_file_system：表示当前系统文件是否大小写敏感（ON为不敏感，OFF为敏感），只读参数，无法修改。</li><li>lower_case_table_names：表示表名是否大小写敏感，可以修改。</li><li>lower_case_table_names &#x3D; 0时，mysql会根据表名直接操作，大小写敏感。</li><li>lower_case_table_names &#x3D; 1时，mysql会先把表名转为小写，再执行操作。</li></ul><br><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>1.停止MySQL</p><p>2.删除数据目录，即删除 &#x2F;var&#x2F;lib&#x2F;mysql 目录、</p><p>3.在MySQL配置文件（ &#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d&#x2F;mysqld.cnf ）中添加 lower_case_table_names&#x3D;1</p><p>4.启动 MySQL（这个时候没有密码了）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql stop</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/mysql</span><br><span class="line">sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line">sudo service mysql restart</span><br><span class="line">mysql -uroot -p </span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513171216742.png" alt="image-20240513171216742"></p><p><img src="https://img.liuyueyue.top//xlimage-20240513171230752.png" alt="image-20240513171230752"></p><p>然后再查看一下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#x27;%case%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513171305254.png" alt="image-20240513171305254"></p><br><h3 id="重新配置"><a href="#重新配置" class="headerlink" title="重新配置"></a>重新配置</h3><p>数据库表已经不区分大小写了，接着再配置一下密码，用户即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 连接</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">#设置root可以远程连接</span><br><span class="line">use mysql;</span><br><span class="line">update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select user, plugin from mysql.user;</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| user             | plugin                |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| root             | auth_socket           |</span><br><span class="line">| mysql.infoschema | caching_sha2_password |</span><br><span class="line">| mysql.session    | caching_sha2_password |</span><br><span class="line">| mysql.sys        | caching_sha2_password |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#更新了用户root的插件信息</span><br><span class="line">update user set plugin=&#x27;mysql_native_password&#x27; where user=&#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">#修改密码</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">#更新权限</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240513173853789.png" alt="image-20240513173853789"></p><p>输入alter user ‘root‘@’localhost’ identified with mysql_native_password by ‘123456’; </p><p>出现了报错，原因是我的user为root，而我的host为%，改localhost为%即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20240513174805632.png" alt="image-20240513174805632"></p><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/weixin_43961117/article/details/126755140">Debian直接安装mysql8_debian安装mysql8-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/644842430">mysql 8改为不区分大小写的2种方法 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/lym003/article/details/133769639">Debian12安装MySQL8、创建新用户、授权实践及问题解决方案_debian12 安装mysql-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_45675449/article/details/106866700">MySQL报错：ERROR 1396 (HY000): Operation ALTER USER failed for root@localhost-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器一键DD重装</title>
      <link href="/posts/2024/04/22/3587609196.html"/>
      <url>/posts/2024/04/22/3587609196.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>记录一下云服务器的dd重装系统的过程，dd的原因就是更大程度使用云服务器的性能和避免被供应商监控，使系统更加纯净。</p><p>我的服务器是阿里云的2核4g的ECS云服务器，已经将系统设置为Debian 12。</p><p>我使用的是<a href="https://www.nodeseek.com/post-9383-1">天权璇玑</a>的脚本。</p><p>这篇文章可能以后也会慢慢更新。</p><br><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><ol><li><p>更新系统下载必要软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install wget -y </span><br></pre></td></tr></table></figure></li></ol><br><ol start="2"><li><p>下载运行脚本</p><p>因为我是国内云服务器，所以从Gitee下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://gitee.com/mb9e8j2/Tools/raw/master/Linux_reinstall/InstallNET.sh&#x27;</span> &amp;&amp; <span class="built_in">chmod</span> a+x InstallNET.sh</span><br></pre></td></tr></table></figure><p>国外服务器使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh&#x27;</span> &amp;&amp; <span class="built_in">chmod</span> a+x InstallNET.sh</span><br></pre></td></tr></table></figure><br></li><li><p>安装debian 12</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash InstallNET.sh -debian 12</span><br></pre></td></tr></table></figure><p>这是安装完成后的提示信息：</p><p><img src="https://img.liuyueyue.top//xlimage-20240422180408344.png" alt="image-20240422180408344"></p><p>安装完成后，需要等待几分钟才可以登录。</p></li></ol>  <br><ol start="4"><li><p>ssh端口不变，输入默认密码LeitboGi0ro进行登录。</p><br></li><li><p>修改密码</p><p><img src="https://img.liuyueyue.top//xlimage-20240422183247055.png" alt="image-20240422183247055"></p></li></ol><br><h1 id="安全防护"><a href="#安全防护" class="headerlink" title="安全防护"></a>安全防护</h1><p>任何涉及到安装的操作之前，先更新一下我们安装包的索引，可以的话，顺便更新一下软件。这本身也是安全的一部分，新的软件意味着更少的漏洞。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update   #更新软件包列表，以确保你看到的是最新的可用软件包信息。</span><br><span class="line">apt upgrade  #升级系统中已安装的软件包到它们的最新版本。</span><br></pre></td></tr></table></figure><br><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><h3 id="更改端口"><a href="#更改端口" class="headerlink" title="更改端口"></a>更改端口</h3><p>先来解决【端口 &#x3D; 22】的问题。（注意：有些 VPS 服务商，默认的端口已经是非 22 端口，那么可以忽略这一步)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>在里面查找到Port，我已经将22修改到了9867。</p><p><img src="https://img.liuyueyue.top//xlimage-20240422214817135.png" alt="image-20240422214817135"></p><p>如果用的是国内服务器，还要记得在安全组放行新的端口。</p><p>最后，重启ssh服务即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><blockquote><p>注意：为了保证你不会失联，请不要关闭当前的ssh登录窗口！而是另外开一个窗口来测试！</p></blockquote><br><h3 id="使用复杂的密码"><a href="#使用复杂的密码" class="headerlink" title="使用复杂的密码"></a>使用复杂的密码</h3><p><a href="https://1password.com/zh-cn/password-generator/">https://1password.com/zh-cn/password-generator/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240422220401372.png" alt="image-20240422220401372"></p><p>出现提示让你修改密码。然后粘贴进去就行了。（注意为了安全的考量，Linux下输入密码是没有显示的)</p><br><h3 id="新建普通用户"><a href="#新建普通用户" class="headerlink" title="新建普通用户"></a>新建普通用户</h3><p>接下来，我们来解决【用户名 &#x3D; root】的问题。</p><p>root账号是古希腊掌管Linux系统的神（浅浅玩一下梗），一旦它出现安全问题，那么整个系统都任人宰割了。</p><p><strong>i. 新增一个普通用户并设置密码</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser username</span><br></pre></td></tr></table></figure><p>执行命令后，根据提示操作即可。请务必设置一个用户密码（别忘记设置密码时你时看不到 ****** 的）。之后系统会询问你一些用户的附加信息，这些就可以无视，一路回车即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20240422221601654.png" alt="image-20240422221601654"></p><p><strong>ii. 安装sudo（普通账户临时获得root的权利）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install sudo</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240422224512116.png" alt="image-20240422224512116"></p><p><strong>iii. 将用户加入sudo名单中</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br></pre></td></tr></table></figure><p>在 User Privilege Specification 下加入一行 lcf ALL&#x3D;(ALL) NOPASSWD: ALL 即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20240422225912323.png" alt="image-20240422225912323"></p><blockquote><p>NOPASSWD这个设置，它的意思是vpsadmin用户临时使用root权限时，不用额外输入密码。</p><p>如果你希望遵守传统习惯、每次使用sudo时需要输入密码，那么这一行改成 vpsadmin ALL&#x3D;(ALL:ALL) ALL 即可。</p></blockquote><br><h3 id="禁止root登录"><a href="#禁止root登录" class="headerlink" title="禁止root登录"></a>禁止root登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>找到PermitRootLogin Yes这一项（ctrl+w），然后把它后面的设定值改为no即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20240422230943635.png" alt="image-20240422230943635"></p><p>保存是 ctrl+o，然后回车确认，退出是 ctrl+x。</p><p>重启ssh服务即可（不关闭当前ssh登录窗口）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure><br><h3 id="启用密钥验证登录并禁止密码登陆"><a href="#启用密钥验证登录并禁止密码登陆" class="headerlink" title="启用密钥验证登录并禁止密码登陆"></a>启用密钥验证登录并禁止密码登陆</h3><p>SSH key是一对公钥和私钥。</p><p>大部分情况下，都是在客户端生成这对key，然后将public key放到服务端。然后客户端就可以免密登录服务器了。（大多数情况都是使用的这种方法）</p><p>但是，其实也是可以在服务端生成这对key的，然后将private key放到客户端。这样客户端也可以直接连接服务端。</p><p>其实这两种方法没什么区别。在进行验证的时候，客户端拿着的都是私钥，服务端拿着的是公钥。</p><p>我使用的方法是第一种方法。</p><br><h4 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h4><p>我的设备是windows11，先在命令行生成一对秘钥，我已经生成过了，就不选择覆盖了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240424000302237.png" alt="image-20240424000302237"></p><br><h4 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h4><p><strong>1.将id_rsa.pub放到&#x2F;root&#x2F;.ssh文件夹中，复制内容到authorized_keys文件中，再注意下文件权限。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /root/.ssh</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys </span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240424000708730.png" alt="image-20240424000708730"></p><p><strong>2.编辑ssh配置文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/ssh/sshd_config</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下面为推荐配置</span></span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys      #ssh文件位置，此项默认设置相同</span><br><span class="line">PasswordAuthentication no                        #使用密码  no为不使用密码</span><br><span class="line">AuthenticationMethods publickey,password          #如果密码和密钥都使用在末尾加上此行代码</span><br></pre></td></tr></table></figure><p>这里需要说一下，我的PasswordAuthentication no设置是没有生效的，网上搜索了一下，可能是个bug，需要将这一行放到文件开头才生效。</p><p><img src="https://img.liuyueyue.top//xlimage-20240424002558542.png" alt="image-20240424002558542"></p><p>至此，我的云服务器只能使用我的私钥来登录了。</p><p><strong>3.重启sshd服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><p><strong>4.注意事项</strong></p><p>上面每一步修改都不要关闭当前远程登录界面，测试完全通过之后，才可以关闭当前登录窗口，避免出现登录不上的情况。</p><br><h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><h3 id="禁Ping"><a href="#禁Ping" class="headerlink" title="禁Ping"></a>禁Ping</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>修改文件 &#x2F;etc&#x2F;sysctl.conf，在文件末尾增加一行：net.ipv4.icmp_echo_ignore_all &#x3D; 1</p><p>如果已经有 net.ipv4.icmp_echo_ignore_all 这一行了，直接修改 &#x3D; 号后面的值即可的 0 表示允许，1 表示禁止。</p><p><img src="https://img.liuyueyue.top//xlimage-20240423001341604.png" alt="image-20240423001341604"></p><p>修改完后执行<strong>sudo sysctl -p</strong>使配置生效。</p><p><img src="https://img.liuyueyue.top//xlimage-20240423002024627.png" alt="image-20240423002024627"></p><br><h3 id="UFW防火墙"><a href="#UFW防火墙" class="headerlink" title="UFW防火墙"></a>UFW防火墙</h3><p><strong>i. 安装：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install ufw</span><br></pre></td></tr></table></figure><p><strong>ii. 检查一下ufw的状态，查看是否运行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604102946856.png" alt="image-20240604102946856"></p><p>状态是 <code>inactive</code> ，意思是没有被激活或不起作用。</p><p><strong>iii. 设置ufw使用默认值</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw default deny incoming</span><br><span class="line">sudo ufw default allow outgoing</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604104007426.png" alt="image-20240604104007426"></p><h4 id="允许连接"><a href="#允许连接" class="headerlink" title="允许连接"></a>允许连接</h4><p><strong>1. SSH</strong></p><p>如果没有改端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure><p>现在我们改了端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 9756/tcp comment <span class="string">&#x27;SSH&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>2. 允许http连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow http</span><br></pre></td></tr></table></figure><p><strong>3. 允许https连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow https</span><br></pre></td></tr></table></figure><p><strong>4. 启动&#x2F;禁用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span>  <span class="comment">#启用</span></span><br><span class="line">ufw <span class="built_in">disable</span>  <span class="comment">#禁用</span></span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604103510737.png" alt="image-20240604103510737"></p><p><strong>5. 查看状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604104831503.png" alt="image-20240604104831503"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status numbered</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604105130680.png" alt="image-20240604105130680"></p><p><strong>6.  删除一条规则</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw delete 5</span><br></pre></td></tr></table></figure><p><img src="https://img.liuyueyue.top//xlimage-20240604105256014.png" alt="image-20240604105256014"></p><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><p><a href="https://blog.laoda.de/archives/how-to-secure-a-linux-server">保护好你的小鸡！保姆级服务器安全教程！-我不是咕咕鸽 (laoda.de)</a></p></li><li><p><a href="https://www.nodeseek.com/post-9383-1">史上最强，支持 Debian 12 raid 0 Ubuntu 24.04（测试中）；512MB 内存安装 AlmaLinux&#x2F;RockyLinux；CentOS 9 Fedora 39 AlpineLinux Kali Linux Windows 重装程序功能更新、bug反馈贴（长期更新） (nodeseek.com)</a></p></li><li><p><a href="https://blog.csdn.net/h1008685/article/details/137458453">公钥私钥详细讲解(小白都能看懂)，SSH密钥远程连接服务器，代码，命令详解_服务器 公钥-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/myarche/article/details/103402139">Linux 服务器配置使用密钥登录教程_ssh-keygen -p -m pem -f-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/quqi99/article/details/132677704">ssh的PasswordAuthentication不生效的问题(by quqi99)_passwordauthentication no 不生效-CSDN博客</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux搭建JavaEE环境</title>
      <link href="/posts/2024/02/07/145460297.html"/>
      <url>/posts/2024/02/07/145460297.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学习的是韩顺平老师的Linux教学视频，来记录一下搭建JavaEE环境的过程。</p><br><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>如果需要在 Linux 下进行 JavaEE 的开发，我们需要安装如下软件：</p><p><img src="https://img.liuyueyue.top//xlimage-20240207171003562.png" alt="image-20240207171003562"></p><p><a href="https://pan.baidu.com/s/1asTZE_5PaTymYpEa8M6LGw?pwd=ougl">以上软件的链接在这里</a></p><br><h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><ol><li><p>先创建目录：mkdir &#x2F;opt&#x2F;jdk</p></li><li><p>通过SSH连接工具来上传软件到 &#x2F;opt&#x2F;jdk下</p></li><li><p>进入目录：cd &#x2F;opt&#x2F;jdk</p></li><li><p>解压 tar -zxvf jdk-8u261-linux-x64.tar.gz</p></li><li><p>mkdir &#x2F;usr&#x2F;local&#x2F;java </p></li><li><p>mv &#x2F;opt&#x2F;jdk&#x2F;jdk1.8.0_261 &#x2F;usr&#x2F;local&#x2F;java </p></li><li><p>配置环境变量的配置文件 vim &#x2F;etc&#x2F;profile，在最后面加上 export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_261和 export PATH&#x3D;JAVA_HOME&#x2F;bin:PATH 即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20240207181449897.png" alt="image-20240207181449897"></p><p><img src="https://img.liuyueyue.top//xlimage-20240207181530199.png" alt="image-20240207181530199"></p></li><li><p>source &#x2F;etc&#x2F;profile [让新的环境变量生效]</p></li><li><p>测试是否安装成功</p><p><img src="https://img.liuyueyue.top//xlimage-20240207181701165.png" alt="image-20240207181701165"></p></li></ol><br><h1 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h1><ol><li><p>上传安装文件，并解压缩到&#x2F;opt&#x2F;tomcat </p></li><li><p>进入解压目录&#x2F;bin , 启动 tomcat .&#x2F;startup.sh </p></li><li><p>开放端口 8080：firewall-cmd –permanent –add-port&#x3D;8080&#x2F;tcp </p></li><li><p>刷新一下防火墙：firewall-cmd –reload</p></li><li><p>在 windows、Linux 下 访问<a href="http://linuxip:8080/">http://linuxip:8080/</a></p><p><img src="https://img.liuyueyue.top//xlimage-20240207194103538.png" alt="image-20240207194103538"></p></li></ol><br><h1 id="安装idea2020"><a href="#安装idea2020" class="headerlink" title="安装idea2020"></a>安装idea2020</h1><ol><li><p>下载地址: <a href="https://www.jetbrains.com/idea/download/#section=windows">https://www.jetbrains.com/idea/download/#section=windows</a> </p></li><li><p>解压缩到&#x2F;opt&#x2F;idea </p></li><li><p>启动 idea bin 目录下 .&#x2F;idea.sh，配置 jdk </p></li><li><p>编写 Hello world 程序并测试成功！</p><p><img src="https://img.liuyueyue.top//xlimage-20240207195016234.png" alt="image-20240207195016234"></p></li></ol><br><h1 id="安装mysql5-7"><a href="#安装mysql5-7" class="headerlink" title="安装mysql5.7"></a>安装mysql5.7</h1><ol><li><p>新建文件夹&#x2F;opt&#x2F;mysql，并cd进去</p></li><li><p>运行wget <a href="http://dev.mysql.com/get/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar%EF%BC%8C%E4%B8%8B%E8%BD%BDmysql%E5%AE%89%E8%A3%85%E5%8C%85">http://dev.mysql.com/get/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar，下载mysql安装包</a></p></li><li><p>运行tar -xvf mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar </p></li><li><p>运行rpm -qa|grep mari，查询mariadb相关安装包</p><p><img src="https://img.liuyueyue.top//xlimage-20240207195501517.png" alt="image-20240207195501517"></p></li><li><p>运行rpm -e –nodeps mariadb-libs和rpm -e –nodeps marisa，进行卸载</p><ul><li>centos7.6自带的类mysql数据库是mariadb，会跟mysql冲突，要先删除。</li></ul></li><li><p>然后开始真正安装mysql，依次运行以下几条</p><ul><li>rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm</li><li>rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm</li><li>rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm</li><li>rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm</li></ul></li><li><p>运行systemctl start mysqld.service，启动mysql</p></li><li><p>然后开始设置root用户密码</p><blockquote><p>Mysql自动给root用户设置随机密码，运行grep “password” &#x2F;var&#x2F;log&#x2F;mysqld.log可看到当前密码</p></blockquote></li></ol><p><img src="https://img.liuyueyue.top//xlimage-20240207200143214.png" alt="image-20240207200143214"></p><ol start="9"><li><p>运行mysql -u root -p，用root用户登录，提示输入密码可用上述的。</p></li><li><p>设置root密码，对于个人开发环境，如果要设比较简单的密码（<strong>生产环境服务器要设复杂密码</strong>），可以运行set global validate_password_policy&#x3D;0; 提示密码设置策略（validate_password_policy默认值1）</p><p><img src="https://img.liuyueyue.top//xlimage-20240207201150388.png" alt="image-20240207201150388"></p></li><li><p>set password for ‘root‘@’localhost’ &#x3D;password(‘root’)。</p></li><li><p>运行flush privileges使密码设置生效。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国内Linux云服务器高速下载GitHub</title>
      <link href="/posts/2024/01/26/2525754687.html"/>
      <url>/posts/2024/01/26/2525754687.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于 Github 的部署环境，国内访问 GitHub 会异常缓慢，在 clone 仓库时经常会非常慢或者没有进度。</p><p>如果是我们日常使用的设备，还可以加个代理进行访问，但是对于国内云服务器来说，加个代理也不太现实，所以我们通过修改系统 hosts 文件的办法，直接访问 GitHub 的 CDN 节点，从而达到加速的目的。</p><br><h1 id="获取GitHub高速下载-访问IP"><a href="#获取GitHub高速下载-访问IP" class="headerlink" title="获取GitHub高速下载&#x2F;访问IP"></a>获取GitHub高速下载&#x2F;访问IP</h1><p>这里推荐一个<a href="https://github.com/521xueweihan/GitHub520">github的项目</a>，里面会实时更新github相关的域名加速cdn。</p><p>下面的地址无需访问 GitHub 即可获取到最新的 hosts 内容：</p><ul><li>文件：<code>https://raw.hellogithub.com/hosts</code></li><li>JSON：<code>https://raw.hellogithub.com/hosts.json</code></li></ul><p>最新ip列表：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">140.82.114.25</span>                 alive.github.com</span><br><span class="line"><span class="number">140.82.112.5</span>                  api.github.com</span><br><span class="line"><span class="number">185.199.110.153</span>               assets-cdn.github.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars0.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars1.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars2.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars3.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars4.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               avatars5.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               camo.githubusercontent.com</span><br><span class="line"><span class="number">140.82.114.21</span>                 central.github.com</span><br><span class="line"><span class="number">185.199.111.133</span>               cloud.githubusercontent.com</span><br><span class="line"><span class="number">140.82.114.10</span>                 codeload.github.com</span><br><span class="line"><span class="number">140.82.112.22</span>                 collector.github.com</span><br><span class="line"><span class="number">185.199.111.133</span>               desktop.githubusercontent.com</span><br><span class="line"><span class="number">185.199.110.133</span>               favicons.githubusercontent.com</span><br><span class="line"><span class="number">140.82.112.4</span>                  gist.github.com</span><br><span class="line"><span class="number">52.216.209.233</span>                github-cloud.s3.amazonaws.com</span><br><span class="line"><span class="number">52.216.185.36</span>                 github-com.s3.amazonaws.com</span><br><span class="line"><span class="number">54.231.232.41</span>                 github-production-release-asset-2e65be.s3.amazonaws.com</span><br><span class="line"><span class="number">52.217.46.60</span>                  github-production-repository-file-5c1aeb.s3.amazonaws.com</span><br><span class="line"><span class="number">52.217.202.169</span>                github-production-user-asset-6210df.s3.amazonaws.com</span><br><span class="line"><span class="number">192.0.66.2</span>                    github.blog</span><br><span class="line"><span class="number">140.82.113.4</span>                  github.com</span><br><span class="line"><span class="number">140.82.112.17</span>                 github.community</span><br><span class="line"><span class="number">185.199.108.154</span>               github.githubassets.com</span><br><span class="line"><span class="number">151.101.1.194</span>                 github.global.ssl.fastly.net</span><br><span class="line"><span class="number">185.199.110.153</span>               github.io</span><br><span class="line"><span class="number">185.199.111.133</span>               github.map.fastly.net</span><br><span class="line"><span class="number">185.199.110.153</span>               githubstatus.com</span><br><span class="line"><span class="number">140.82.112.25</span>                 live.github.com</span><br><span class="line"><span class="number">185.199.111.133</span>               media.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               objects.githubusercontent.com</span><br><span class="line"><span class="number">13.107.42.16</span>                  pipelines.actions.githubusercontent.com</span><br><span class="line"><span class="number">185.199.111.133</span>               raw.githubusercontent.com</span><br><span class="line"><span class="number">185.199.110.133</span>               user-images.githubusercontent.com</span><br><span class="line"><span class="number">13.107.213.40</span>                 vscode.dev</span><br><span class="line"><span class="number">140.82.114.22</span>                 education.github.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Update time: <span class="number">2024</span>-<span class="number">01</span>-26T20:<span class="number">06</span>:<span class="number">37</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line"># Update url: https://raw.hellogithub.com/hosts</span><br><span class="line"># Star me: https://github.com/521xueweihan/GitHub520</span><br><span class="line"># GitHub520 Host End</span><br></pre></td></tr></table></figure><br><h1 id="Linux服务器hosts修改"><a href="#Linux服务器hosts修改" class="headerlink" title="Linux服务器hosts修改"></a>Linux服务器hosts修改</h1><p>查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/hosts</span><br></pre></td></tr></table></figure><p>修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>按 i 切换至编辑模式。</p><p>将上面查询到的合适ip加到hosts文件即可</p><p>20.205.243.166 github.com<br>185.199.111.133 raw.githubusercontent.com<br>185.199.111.133 raw.githubusercontent.com</p><p>输入完成后，按 Esc，输入 :wq，保存文件并返回。</p><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://www.xcbtmw.com/29440.html#h32">国内云服务器高速下载GitHub方法-修改hosts－网站建设－老白博客 (xcbtmw.com)</a></li><li>[国内云服务器无法访问 GitHub - 公有云文档中心 (qingcloud.com)](<a href="https://docsv4.qingcloud.com/user_guide/compute/vm/faq/other_questions/domestic_to_github/#:~:text=%E5%9B%BD%E5%86%85%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE">https://docsv4.qingcloud.com/user_guide/compute/vm/faq/other_questions/domestic_to_github/#:~:text=国内云服务器无法访问</a> GitHub 更新时间：2024-01-20 15%3A03%3A07 PDF 由于 Github 的部署环境，国内访问,界面因为无法登录。 下面我们通过修改系统 hosts 文件的办法，直接访问 GitHub 的 CDN 节点，从而达到加速的目的。)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 云服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请美国自由大学教育邮箱</title>
      <link href="/posts/2023/12/20/4133790210.html"/>
      <url>/posts/2023/12/20/4133790210.html</url>
      
        <content type="html"><![CDATA[<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p>今天是2023年12月20日，不确定之后还能不能使用。</p><p>因为大学的级别比较低，所以没有给我们准备教育邮箱，很早就想弄这个教育邮箱了，因为可以申请jet全家桶….. 但是网上各种方法都试过了，还是没有办法，今天在全球主机论坛看到了一篇帖子（原贴链接会放到最后面），抱着试一试的心态，结果真的注册成功了，可能后期会收回，但能用多久用多久嘛。。。</p><br><h2 id="需要的网站和工具"><a href="#需要的网站和工具" class="headerlink" title="需要的网站和工具"></a>需要的网站和工具</h2><ol><li><p>美国自由大学：<a href="https://www.liberty.edu/">https://www.liberty.edu/</a></p></li><li><p>美国身份信息生成器：<a href="https://fauxid.com/">https://fauxid.com/</a></p><ul><li>如果一直出现cf验证，可以试试无痕模式。</li></ul></li><li><p>我在注册的时候是全程用梯，但是后来发现两个网站好像都没有被墙，不用梯好像也可以。</p></li><li><p>如果不带梯遇到一直转圈打不开的状态，可以试试移动端。</p></li></ol><br><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><ol><li><p>先去身份信息那边申请一个20岁左右的信息 State选Alaska，打开自由大学官网, 点右上角的 <code>Apply</code>。</p><p>Online<code>-&gt;</code>Certificate，然后问对什么学习感兴趣这个我是随便填的，接着保存即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20231220230230119.png" alt="image-20231220230230119"></p><p>我的身份认证信息是这样：</p><p><img src="https://img.liuyueyue.top//xlimage-20231220231710891.png" alt="image-20231220231710891"></p></li><li><p><img src="https://img.liuyueyue.top//xlimage-20231220232119794.png" alt="image-20231220232119794"></p></li><li><p>都根据网站的虚拟信息填写即可</p><p><img src="https://img.liuyueyue.top//xlimage-20231220232746295.png" alt="image-20231220232746295"></p><p><img src="https://img.liuyueyue.top//xlimage-20231220232754849.png" alt="image-20231220232754849"></p></li><li><p><img src="https://img.liuyueyue.top//xlimage-20231220232856583.png" alt="image-20231220232856583"></p></li><li><p>接着就到这一步了</p><p><img src="https://img.liuyueyue.top//xlimage-20231220232931950.png" alt="image-20231220232931950"></p></li></ol><ul><li><p>Your Liberty University ID is: L34580733是学号</p></li><li><p>然后我们点击第二条的链接<a href="https://idp.liberty.edu/sso/fgClaim">Claim your account</a> at your earliest convenience.</p></li></ul><ol start="6"><li><p>点进来后继续填写信息</p><p><img src="https://img.liuyueyue.top//xlimage-20231220233200303.png" alt="image-20231220233200303"></p><ul><li>好吧，后来发现我姓氏填反了，填成名字了，注意下就行。</li></ul></li><li><p>然后就是设置密码环节</p><p><img src="https://img.liuyueyue.top//xlimage-20231220233344131.png" alt="image-20231220233344131"></p></li><li><p>这就算注册好了，等20分钟就能登陆了，记住邮箱账号。</p><p><img src="https://img.liuyueyue.top//xlimage-20231220233443899.png" alt="image-20231220233443899"></p></li><li><p>进入<a href="https://www.liberty.edu/%EF%BC%8C%E7%82%B9%E5%8F%B3%E4%B8%8A%E8%A7%92%E7%9A%84sign">https://www.liberty.edu/，点右上角的sign</a> in登录即可。</p></li></ol><br><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>按照步骤来基本就没有什么问题了，图片应该很详细了，可以申请jet全家桶，其他的还没有测试，还有不确定能用多久。</p><br><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>登录这个邮箱时候，注意开的节点和注册时候的节点保持一致，不然可能被秒封（我已经被秒封了）。</p><br><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://hostloc.com/thread-1250649-1-1.html">https://hostloc.com/thread-1250649-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 薅羊毛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教育邮箱 </tag>
            
            <tag> 薅羊毛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进制转换</title>
      <link href="/posts/2023/12/09/2110329172.html"/>
      <url>/posts/2023/12/09/2110329172.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为要备战蓝桥杯，也是为了以后方便自己查看，总结一下常见进制转换，比如其他进制转十进制，十进制转其他进制，和不同进制之间的转换，一般进制转换分为调用api和手写代码两种。</p><br><h1 id="调用API"><a href="#调用API" class="headerlink" title="调用API"></a>调用API</h1><h2 id="十进制转其他进制"><a href="#十进制转其他进制" class="headerlink" title="十进制转其他进制"></a>十进制转其他进制</h2><h3 id="转二进制"><a href="#转二进制" class="headerlink" title="转二进制"></a>转二进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十进制数转换为二进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decimalToBinary</span><span class="params">(<span class="type">int</span> decimal)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.toBinaryString(decimal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="转八进制"><a href="#转八进制" class="headerlink" title="转八进制"></a>转八进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十进制数转换为八进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decimalToOctal</span><span class="params">(<span class="type">int</span> decimal)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.toOctalString(decimal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="转十六进制"><a href="#转十六进制" class="headerlink" title="转十六进制"></a>转十六进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十进制数转换为十六进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decimalToHexadecimal</span><span class="params">(<span class="type">int</span> decimal)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.toHexString(decimal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="其他进制转十进制"><a href="#其他进制转十进制" class="headerlink" title="其他进制转十进制"></a>其他进制转十进制</h2><h3 id="二转十"><a href="#二转十" class="headerlink" title="二转十"></a>二转十</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将二进制数转换为十进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binaryToDecimal</span><span class="params">(String binary)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.parseInt(binary, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="八转十"><a href="#八转十" class="headerlink" title="八转十"></a>八转十</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将八进制数转换为十进制数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">octalToDecimal</span><span class="params">(String octal)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(octal, <span class="number">8</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br><h3 id="十六转十"><a href="#十六转十" class="headerlink" title="十六转十"></a>十六转十</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十六进制数转换为十进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">hexadecimalToDecimal</span><span class="params">(String hexadecimal)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.parseInt(hexadecimal, <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="不同进制之间的转换"><a href="#不同进制之间的转换" class="headerlink" title="不同进制之间的转换"></a>不同进制之间的转换</h2><h3 id="其他进制转二进制"><a href="#其他进制转二进制" class="headerlink" title="其他进制转二进制"></a>其他进制转二进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">octal</span> <span class="operator">=</span> <span class="string">&quot;52&quot;</span>;</span><br><span class="line">    <span class="comment">// 八进制转换为二进制</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">binaryFromOctal</span> <span class="operator">=</span> Integer.toBinaryString(Integer.parseInt(octal, <span class="number">8</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;Octal to Binary: &quot;</span> + binaryFromOctal);<span class="comment">//101010</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">hexadecimal</span> <span class="operator">=</span> <span class="string">&quot;2a&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 十六进制转换为二进制</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">binaryFromHexadecimal</span> <span class="operator">=</span> Integer.toBinaryString(Integer.parseInt(hexadecimal, <span class="number">16</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;Hexadecimal to Binary: &quot;</span> + binaryFromHexadecimal);<span class="comment">//101010</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="二进制转其他进制"><a href="#二进制转其他进制" class="headerlink" title="二进制转其他进制"></a>二进制转其他进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">binary</span> <span class="operator">=</span> <span class="string">&quot;101010&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二进制转换为八进制</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">octal</span> <span class="operator">=</span> Integer.toString(Integer.parseInt(binary, <span class="number">2</span>), <span class="number">8</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;Binary to Octal: &quot;</span> + octal); <span class="comment">//52</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二进制转换为十六进制</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">hexadecimal</span> <span class="operator">=</span> Integer.toString(Integer.parseInt(binary, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;Binary to Hexadecimal: &quot;</span> + hexadecimal); <span class="comment">//2a</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h1 id="手动实现"><a href="#手动实现" class="headerlink" title="手动实现"></a>手动实现</h1><h2 id="十进制转其他进制-1"><a href="#十进制转其他进制-1" class="headerlink" title="十进制转其他进制"></a>十进制转其他进制</h2><h3 id="转二进制-1"><a href="#转二进制-1" class="headerlink" title="转二进制"></a>转二进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十进制数转换为二进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decimalToBinary</span><span class="params">(<span class="type">int</span> decimal)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">binary</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">while</span> (decimal &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        binary.insert(<span class="number">0</span>, decimal % <span class="number">2</span>);</span><br><span class="line">        decimal /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> binary.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="转八进制-1"><a href="#转八进制-1" class="headerlink" title="转八进制"></a>转八进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十进制数转换为八进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decimalToOctal</span><span class="params">(<span class="type">int</span> decimal)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">octal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">while</span> (decimal &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        octal.insert(<span class="number">0</span>, decimal % <span class="number">8</span>);</span><br><span class="line">        decimal /= <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> octal.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="转十六进制-1"><a href="#转十六进制-1" class="headerlink" title="转十六进制"></a>转十六进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十进制数转换为十六进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decimalToHexadecimal</span><span class="params">(<span class="type">int</span> decimal)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">hexadecimal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">while</span> (decimal &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">remainder</span> <span class="operator">=</span> decimal % <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">if</span> (remainder &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            hexadecimal.insert(<span class="number">0</span>, (<span class="type">char</span>) (remainder + <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            hexadecimal.insert(<span class="number">0</span>, (<span class="type">char</span>) (remainder - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        decimal /= <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hexadecimal.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="其他进制转十进制-1"><a href="#其他进制转十进制-1" class="headerlink" title="其他进制转十进制"></a>其他进制转十进制</h2><h3 id="二转十-1"><a href="#二转十-1" class="headerlink" title="二转十"></a>二转十</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将二进制数转换为十进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binaryToDecimal</span><span class="params">(String binary)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">power</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> binary.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">digit</span> <span class="operator">=</span> binary.charAt(i) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        decimal += digit * Math.pow(<span class="number">2</span>, power);</span><br><span class="line">        power++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> decimal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="八转十-1"><a href="#八转十-1" class="headerlink" title="八转十"></a>八转十</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将八进制数转换为十进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">octalToDecimal</span><span class="params">(String octal)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">power</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> octal.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">digit</span> <span class="operator">=</span> octal.charAt(i) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        decimal += digit * Math.pow(<span class="number">8</span>, power);</span><br><span class="line">        power++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> decimal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="十六转十-1"><a href="#十六转十-1" class="headerlink" title="十六转十"></a>十六转十</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将十六进制数转换为十进制数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">hexadecimalToDecimal</span><span class="params">(String hexadecimal)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">power</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> hexadecimal.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">digit</span> <span class="operator">=</span> hexadecimal.charAt(i);</span><br><span class="line">        <span class="keyword">if</span> (digit &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; digit &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            decimal += (digit - <span class="string">&#x27;0&#x27;</span>) * Math.pow(<span class="number">16</span>, power);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (digit &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; digit &lt;= <span class="string">&#x27;F&#x27;</span>) &#123;</span><br><span class="line">            decimal += (digit - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>) * Math.pow(<span class="number">16</span>, power);</span><br><span class="line">        &#125;</span><br><span class="line">        power++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> decimal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="不同进制之间的转换-1"><a href="#不同进制之间的转换-1" class="headerlink" title="不同进制之间的转换"></a>不同进制之间的转换</h2><h3 id="其他进制转二进制-1"><a href="#其他进制转二进制-1" class="headerlink" title="其他进制转二进制"></a>其他进制转二进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//八进制转二进制</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">octalToBinary</span><span class="params">(String octalNumber)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">binaryNumber</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; octalNumber.length(); i++) &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">digit</span> <span class="operator">=</span> octalNumber.charAt(i);</span><br><span class="line">        <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> Character.getNumericValue(digit);</span><br><span class="line">        <span class="type">String</span> <span class="variable">binary</span> <span class="operator">=</span> Integer.toBinaryString(decimal);</span><br><span class="line">        binaryNumber.append(binary);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> binaryNumber.toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//十六进制转二进制</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">hexadecimalToBinary</span><span class="params">(String hexadecimalNumber)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">binaryNumber</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; hexadecimalNumber.length(); i++) &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">digit</span> <span class="operator">=</span> hexadecimalNumber.charAt(i);</span><br><span class="line">        <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> Character.digit(digit, <span class="number">16</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">binary</span> <span class="operator">=</span> Integer.toBinaryString(decimal);</span><br><span class="line">        binaryNumber.append(binary);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> binaryNumber.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="二进制转其他进制-1"><a href="#二进制转其他进制-1" class="headerlink" title="二进制转其他进制"></a>二进制转其他进制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二转八</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">binaryToOctal</span><span class="params">(String binaryNumber)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">octalNumber</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> binaryNumber.length();</span><br><span class="line">    <span class="type">int</span> <span class="variable">padding</span> <span class="operator">=</span> length % <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (padding != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span> - padding; i++) &#123;</span><br><span class="line">            octalNumber.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        binaryNumber = octalNumber + binaryNumber;</span><br><span class="line">        length += (<span class="number">3</span> - padding);</span><br><span class="line">    &#125;</span><br><span class="line">    octalNumber.setLength(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i += <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">triplet</span> <span class="operator">=</span> binaryNumber.substring(i, i + <span class="number">3</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> Integer.parseInt(triplet, <span class="number">2</span>);</span><br><span class="line">        octalNumber.append(decimal);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> octalNumber.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二转十六</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">binaryToHexadecimal</span><span class="params">(String binaryNumber)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">hexadecimalNumber</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> binaryNumber.length();</span><br><span class="line">    <span class="type">int</span> <span class="variable">padding</span> <span class="operator">=</span> length % <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (padding != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span> - padding; i++) &#123;</span><br><span class="line">            hexadecimalNumber.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        binaryNumber = hexadecimalNumber + binaryNumber;</span><br><span class="line">        length += (<span class="number">4</span> - padding);</span><br><span class="line">    &#125;</span><br><span class="line">    hexadecimalNumber.setLength(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i += <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">quadruplet</span> <span class="operator">=</span> binaryNumber.substring(i, i + <span class="number">4</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">decimal</span> <span class="operator">=</span> Integer.parseInt(quadruplet, <span class="number">2</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">hex</span> <span class="operator">=</span> Integer.toHexString(decimal).toUpperCase();</span><br><span class="line">        hexadecimalNumber.append(hex);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hexadecimalNumber.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网基础教程</title>
      <link href="/posts/2023/11/24/3876151684.html"/>
      <url>/posts/2023/11/24/3876151684.html</url>
      
        <content type="html"><![CDATA[<h1 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h1><p>我会从前到后都穿插一些我对科学上网（翻墙）的理解，所以显得内容很多很杂，<strong>读者可以按需求根据目录跳转观看（移动端好像看不到目录…）。</strong></p><p>这是一篇给小白翻墙后看的文章，内容比较基础，写的有常用操作系统常用的客户端（如clash，v2rayn）使用教程，和翻墙后常浏览的网站推荐….. </p><br><h2 id="常用概念讲解"><a href="#常用概念讲解" class="headerlink" title="常用概念讲解"></a>常用概念讲解</h2><p>会讲解一下梯子，机场和vpn的区别，其实我们大多数人翻墙用的都是梯子，但是平时大家（非本专业）往往统一说成vpn，其实它们是有挺大区别的。</p><br><h3 id="科学上网（梯子）"><a href="#科学上网（梯子）" class="headerlink" title="科学上网（梯子）"></a>科学上网（梯子）</h3><p>简单来说就是用的软件是clash或者小火箭这种，导入一个别人发的url（网址）就能使用，下面是详细解释：</p><p>梯子泛指一切通过代理服务器或其他技术手段将用户的网络请求转发至境外服务器，从而绕过网络封锁，访问被限制的网站的工具。</p><p>这些梯子工具大致分为两类：一种是网页代理服务器（Web Proxy Server），也称为在线代理，它在网页上运行，为用户提供被封锁网站的网页缓存文件；另一种是内置了节点代理服务或使用P2P协议的代理软件，例如蓝灯（Lantern）、赛风（Psiphon）等，它们能够一键突破互联网审查和网络封锁，让用户自由访问受限制的网站。</p><p>虽然这些梯子在过去是人们畅游互联网的利器，但是在速度、隐私及稳定性等方面已无法满足用户的需求。</p><p>随着网络技术的不断发展，越来越多的<strong>代理软件</strong>被开发者们发布出来，这些第三方开源软件得到了广泛的使用，目前主流的软件有：</p><ul><li>Shadowsocks（别名小火箭，酸酸乳）<br>是得到最广泛安装应用的梯子软件，简单易用，功能完善，全协议支持；</li><li>Clash （ISO版为Stash）<br>最新的主流翻墙软件，几乎要取代了小火箭的地位，安装使用也非常简单，但是功能要更加强大，不仅支持全平台全协议订阅，而且可以根据个人需求定制不同的规则协议；</li><li>Surge<br>在MacOS和IOS系统下的全协议梯子；</li><li>Quantumult X<br>IOS系统下的全协议翻墙APP，功能强大；</li></ul><br><h3 id="机场"><a href="#机场" class="headerlink" title="机场"></a>机场</h3><p>机场就是卖梯子的地方，一般是一个网站，里面有各种各样的套餐，中高档机场一般都有电报（Telegram）群，遇到各种问题可以去咨询，下面是详细解释：</p><p>机场是提供科学上网服务的网络供应商，其主要服务项目是提供Shadowsocks、V2ray、Trojan等翻墙协议的节点服务器。这些机场因早期使用Shadowsocks和ShadowsocksR（简写为SS&#x2F;SSR）协议，而纸飞机又是Shadowsocks软件的图标，因此得名“机场”。这些节点服务器订阅文件输入到“飞机”里，就是可以帮助用户绕过网络封锁的“航线”。</p><p>现在，几乎每家机场都能提供针对GWF防火墙的全协议节点服务。然而，机场之间在速度、安全性和稳定性方面仍有差异。甚至机场跑路的情况也时有发生，这使得选择可靠的机场非常重要。</p><p>在选择机场时，用户应该考虑机场的运营时间、口碑和服务质量。经营多年且公认靠谱的机场值得考虑，因为它们通常拥有更稳定的节点、提供IPLC&#x2F;IEPL专线和优质的客户服务。</p><br><h3 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h3><p>经常有些软件名称是某某vpn，某某加速器，一个软件就能翻墙的流程，比使用梯子+订阅节点更加方便一些，而且也更加安全，但是它的缺点就是一般网速没梯子快（同等价位），容易被GFW（自己谷歌搜索）屏蔽，和打开慢（梯子基本一秒就可以完成翻墙），下面是详细解释：</p><p>vpn是虚拟私有网络的英文简称，也可以说这就是一个专用网络，给某些特定地区或者人去使用，我也能说校园网就是个vpn，因为它的受众群体就是在校学生嘛，其他人也基本难以访问，也就是说它的协议设计本身不是为了翻墙，而代理软件的协议才是为了翻墙。</p><br><h1 id="代理工具的使用"><a href="#代理工具的使用" class="headerlink" title="代理工具的使用"></a>代理工具的使用</h1><p>翻墙常用的clash，v2rayn都属于代理工具，也就是梯子，这些代理工具一般都支持挺多协议，说到加密传输协议，最经典就是ss（Shadowsocks）协议，它是由clowwindy（中国人）研发，经过很多技术大牛完善，是现在常用的SSR、V2ray、Trojan这些延伸出来的协议的初代模板。</p><p>下面就是介绍常用梯子的使用方法：</p><br><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="V2rayN"><a href="#V2rayN" class="headerlink" title="V2rayN"></a>V2rayN</h3><p><strong>1. 前言</strong></p><p>现在已经不推荐使用clash for windows了，因为一些原因，作者已经删库跑路了，所以不会再更新和修复漏洞了，以后可能很容易产生安全问题，所以还是推荐使用V2rayN。</p><br><p><strong>2. 下载地址</strong></p><p><a href="https://pan.baidu.com/s/1f4eS-KGXRJpPHzPj-Lmfbw?pwd=s1so">https://pan.baidu.com/s/1f4eS-KGXRJpPHzPj-Lmfbw?pwd=s1so</a></p><p>这里面两个文件下载其中任意一个就行，用的是稳定的6.23版。</p><br><p><strong>3. 使用教程</strong></p><p><strong>i. 先进入文件夹，运行客户端</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231124205702506.png" alt="image-20231124205702506"></p><br><p><strong>ii. 打开全局允许跳过证书验证设置</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231124210140383.png" alt="image-20231124210140383"></p><p><img src="https://img.liuyueyue.top//xlimage-20231124210231543.png" alt="image-20231124210231543"></p><br><p><strong>iii. 导入节点</strong></p><p>一般导入节点常用有两种方式（第二种新手常用），一种是直接从剪切板批量导入。</p><p><img src="https://img.liuyueyue.top//xlimage-20231124211134305.png" alt="image-20231124211134305"></p><p>第二种是点这个+号，自己填写备注信息和url</p><p><img src="https://img.liuyueyue.top//xlimage-20231124211317389.png" alt="image-20231124211317389"></p><p><img src="https://img.liuyueyue.top//xlimage-20231124211323994.png" alt="image-20231124211323994"></p><p>点击订阅分组设置可以查看自己导入过的所有节点信息</p><p><img src="https://img.liuyueyue.top//xlimage-20231124211355082.png" alt="image-20231124211355082"></p><p>一般第一次导入节点后，都需要更新订阅，建议通过代理和不通过代理都点一下，更新当前订阅意思就是更新现在用的这个订阅地址，更新所有订阅就是更新所有导入过的节点信息。</p><p>注意：<strong>一般发现所有节点都不能使用的时候（测速都标红），更新一下订阅就能解决很多问题。</strong></p><br><p><strong>iv. 切换节点</strong></p><p><strong>前言：</strong></p><p>一般发现客户端开着的情况下，突然网速很慢，或者上不了网了，就可以<strong>切换一下节点</strong>，节点有地区的话，就是你切换到这个节点，就会伪装对应地区的流量，例如切换到名字带新加坡的节点，就<strong>相当于新加坡人在上网</strong>，自己的流量（就是WiFi或话费流量）和套餐中的流量是<strong>同时使用</strong>的，比较好的节点套餐可以保证翻墙前的网速和翻墙后的网速<strong>基本一致</strong>（肯定不存在翻墙后的网速比翻墙前的网速还快），就是跑满宽带。</p><br><p><strong>切换教程：</strong></p><ol><li><p>第一种是点击一行，然后按下Enter，完成切换。</p><p><img src="https://img.liuyueyue.top//xlimage-20231124214317820.png" alt="image-20231124214317820"></p></li><li><p>第二种是点击一行后，单击右键，里面能看到很多其他选项，包括了切换节点、测试等功能（按住ctrl键可以选择多个节点，ctrl+A选中所有节点）。</p></li></ol><br><p><strong>v. 配置代理</strong></p><p>在托盘中右击客户端图标，找到“路由”，点选“绕过大陆”，然后找到“系统代理”，点选“自动配置系统代理”即可。</p><p><img src="https://img.liuyueyue.top//xlimage-20231124220602679.png" alt="image-20231124220602679"></p><br><br><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><ul><li>这个没用过，以后再补…..</li></ul><br><br><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>虽然我说clash系列的软件几乎全部跑路了，所以以后出现高危漏洞可能无法修复，可能会泄露隐私，但是不得不说clash系列客户端确实简单好用（安卓端占据了大半壁江山），我还是出一下android端的教程，华为手机不是安卓系统的话，自行谷歌搜索（因为我也没用过华为），其他安卓代理软件，小火箭或者v2rayn和windows端和ios端配置差别不大。</p><h3 id="Clash-for-Android"><a href="#Clash-for-Android" class="headerlink" title="Clash for Android"></a>Clash for Android</h3><blockquote><p>我还是建议最多使用这个软件1-2年，不然可能会出比较大的事故。。</p></blockquote><p><strong>1. 下载介绍与地址</strong></p><ul><li>下载介绍我选择贴一张图：</li></ul><p><img src="https://img.liuyueyue.top//xlimage-20231125000530957.png" alt="image-20231125000530957"></p><ul><li>2.5.12属于稳定版，其他属于测试版</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Clash for Android 2.5.12</span><br><span class="line">Download</span><br><span class="line">[cfa-2.5.12-foss-universal-release.apk] https://tmp.link/f/6544b0cf7385d </span><br><span class="line">[cfa-2.5.12-foss-x86_64-release.apk] https://tmp.link/f/6544b0cee6434 </span><br><span class="line">[cfa-2.5.12-foss-armeabi-v7a-release.apk] https://tmp.link/f/6544b0cee35b9 </span><br><span class="line">[cfa-2.5.12-foss-arm64-v8a-release.apk] https://tmp.link/f/6544b0cede1e3 </span><br><span class="line">[cfa-2.5.12-premium-universal-release.apk] https://tmp.link/f/6544b0cea3785</span><br><span class="line">[cfa-2.5.12-premium-x86-release.apk] https://tmp.link/f/6544b0cd70b69 </span><br><span class="line">[cfa-2.5.12-premium-x86_64-release.apk] https://tmp.link/f/6544b0cd6e6f1</span><br><span class="line">[cfa-2.5.12-premium-armeabi-v7a-release.apk] https://tmp.link/f/6544b0cd6b419 </span><br><span class="line">[cfa-2.5.12-premium-arm64-v8a-release.apk] https://tmp.link/f/6544b0cd66cb1 </span><br><span class="line">[cfa-2.5.12-foss-x86-release.apk] https://tmp.link/f/6544b0cd4128b</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Clash Meta for Android 2.9.0</span><br><span class="line">Download</span><br><span class="line">[cmfa-2.9.0-meta-arm64-v8a-release.apk] https://tmp.link/f/6544ea109749f</span><br><span class="line">[cmfa-2.9.0-meta-armeabi-v7a-release.apk] https://tmp.link/f/6544ea09e3136</span><br><span class="line">[cmfa-2.9.0-meta-universal-release.apk] https://tmp.link/f/6544ea278ecc4</span><br><span class="line">[cmfa-2.9.0-meta-x86-release.apk] https://tmp.link/f/6544ea149a621</span><br><span class="line">[cmfa-2.9.0-meta-x86_64-release.apk] https://tmp.link/f/6544ea12112a3</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Clash for Android 3.0.3</span><br><span class="line">Download</span><br><span class="line">[clash-multiplatform-linux-amd64-premium.zip] https://tmp.link/f/6544b1b53141c</span><br><span class="line">[clash-multiplatform-windows-amd64-premium.zip] https://tmp.link/f/6544b1914577e</span><br><span class="line">[cfa-3.0.3-premium-universal-release.apk] https://tmp.link/f/6544b1a1820ae</span><br><span class="line">[cfa-3.0.3-premium-armeabi-v7a-release.apk] https://tmp.link/f/6544b1a1621ac</span><br><span class="line">[cfa-3.0.3-premium-x86-release.apk] https://tmp.link/f/6544b195a61f4</span><br><span class="line">[cfa-3.0.3-premium-x86_64-release.apk] https://tmp.link/f/6544b19462f1d</span><br><span class="line">[cfa-3.0.3-premium-arm64-v8a-release.apk] https://tmp.link/f/6544b18e027a1</span><br></pre></td></tr></table></figure><br><p><strong>2. 使用方法</strong></p><p>有点懒了，还是贴图</p><p><img src="https://img.liuyueyue.top//xlimage-20231125010145283.png" alt="image-20231125010145283"></p><p>点击节点右侧的三个点按钮，可以修改订阅设置。如图</p><p><img src="https://img.liuyueyue.top//xlimage-20231125000800636.png" alt="image-20231125000800636"></p><p>提示：机场服务器信息可能会不定时更新，若出现大面积节点超时现象，可尝试<strong>刷新订阅（更新按钮）</strong>。 返回首页。点击开关，即可进行代理。会提示是否同意创建VPN，请点击<code>允许</code>。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125000909378.png" alt="image-20231125000909378"></p><p>开启代理后，可以点击中间的代理选项卡，进入策略组面板，在这里可以切换节点。直接点击你想要的节点即可进行切换。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125000937160.png" alt="image-20231125000937160"></p><p>点击⚡图标可以进行延迟测试（延迟低或者高<strong>不一定</strong>反映了速度快或者慢），测试结果将显示在节点名称右侧。</p><br><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>ios就是苹果手机端，基本想用客户端就需要<strong>美国的apple账号</strong>（网上应该教程挺多的），然后充值美元（支付宝就可以冲，自己搜谷歌）去购买，平民推荐小火箭（最简单且好用）、圈x，听说最好用的是Surge（价格也最贵），我只写出小火箭的教程。</p><br><h3 id="Shadowrocket"><a href="#Shadowrocket" class="headerlink" title="Shadowrocket"></a>Shadowrocket</h3><p>打开 Shadowrocket，点击底部导航栏的「设置」进入设置页面，随后往下划至最底部，进入「服务器订阅」子页面。</p><p>将「打开时更新」的开关 <strong>打开</strong>。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125185137350.png" alt="image-20231125185137350"></p><p><strong>回到首页</strong>，点击右上角的加号，再次点击第一行的「类型」，选择 <strong>Subscribe</strong>。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125185243039.png" alt="image-20231125185243039"></p><p>在「备注」中输入本站名称，随后在「URL」中粘贴获取到的链接网址并完成。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125185509203.png" alt="image-20231125185509203"></p><p>随后点击右上角保存，此时会自动更新获取服务器。</p><h4 id="分流规则"><a href="#分流规则" class="headerlink" title="分流规则"></a>分流规则</h4><p>分流规则是我自己在github上面找的，<a href="https://github.com/Johnshall/Shadowrocket-ADBlock-Rules-Forever#%E7%99%BD%E5%90%8D%E5%8D%95%E8%BF%87%E6%BB%A4--%E5%B9%BF%E5%91%8A">这是原地址</a></p><p>在底部导航栏进入「配置」页面，点击右上角加号。</p><p>在弹出的输入框中输入【<a href="https://johnshall.github.io/Shadowrocket-ADBlock-Rules-Forever/sr_top500_whitelist_ad.conf%E3%80%91%E5%8F%AF%E9%95%BF%E6%8C%89%E9%93%BE%E6%8E%A5%E6%8B%B7%E8%B4%9D%EF%BC%8C%E5%B9%B6%E7%82%B9%E5%87%BB%E4%B8%8B%E8%BD%BD%E3%80%82">https://johnshall.github.io/Shadowrocket-ADBlock-Rules-Forever/sr_top500_whitelist_ad.conf】可长按链接拷贝，并点击下载。</a></p><blockquote><p>如远程文件下载失败可以先用默认的</p></blockquote><p>随后点击 <strong>远程文件</strong> 中新增的配置文件地址，在弹出的菜单中选择第二个「使用配置」，此时 APP 会自动开始下载配置并应用配置。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125190212616.png" alt="image-20231125190212616"></p><p><strong>回到首页</strong>，点击进入「全局路由」将其更改为 <strong>配置</strong>。</p><p><img src="https://img.liuyueyue.top//xlimage-20231125190550367.png" alt="image-20231125190550367"></p><br><p><strong>开始使用</strong></p><p>回到 Shadowrocket 首页，在订阅组中选择您需要的节点，随后打开第一行开关即可。</p><p>如提示添加 VPN 配置，请点击 允许并验证您的 密码、Touch ID、Face ID 。</p><br><br><h1 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h1><p>接下来就是日常使用环节，我会先说一些翻墙后的注意事项，然后推荐一些常用网站和其他用处，当然我说的可能只是很小一部分，但是翻过墙才是真正进入的全球互联网，剩下的自己慢慢摸索吧。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>这个是我抄别的博主的，觉得说的挺对<a href="https://qianghub.com/what-to-do-after-bypass-gfw/">原链接在这里</a>。<img src="https://img.liuyueyue.top//xlimage-20231125201819272.png" alt="image-20231125201819272"></p><p>我总结一下就是注意隐私，不要发表政治言论，看h色视频我建议不要用校园网，用流量安全一些，就是日常使用我觉得是没有什么事情的（一般不会被请喝茶）。</p><br><h2 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h2><ol><li>最好注册的账号当属微软帐号了，微软比谷歌好的地方就是翻墙使用和不翻墙使用基本无差别，自己绑定邮箱和手机号就搞定了。</li><li>最重要的账号是谷歌账号（因为我谷歌邮箱用的多），我当时是直接用手机号注册了一个，如果手机号收不到验证码，多试几次？</li><li>谷歌邮箱基本承包（国外网站不建议用qq邮箱）了其他网站需要填写的邮箱，它就是谷歌账号附带的功能，<a href="https://mail.google.com/mail/u/0/#inbox">根据注册好的谷歌账号登录一下谷歌邮箱</a>，就能使用谷歌邮箱了，里面能看到邮箱号，然后密码就是谷歌账号密码。</li><li>想注册各种平台账号，例如tiktok，ins，电报，一般国内手机号经常收不到短信,所以我们就需要一个虚拟手机号（只能获取一次验证码，就用来注册账号），通过虚拟手机号注册后（详细教程自行谷歌），绑定谷歌邮箱，然后以后基本就使用用户名+邮箱+密码登录即可。</li><li>我在这里给出我用的<a href="https://sms-man.com/?ref=NlbiNuAFXbwI">虚拟手机号平台</a>，用了有一年了吧，基本绝大部分账号都能注册，不能注册的话，钱也是能退回来的，然后更换国家，继续尝试接收验证码。</li><li>注册chatgpt，这个ai真的很厉害，免费版都很厉害，最开始也是需要国外手机号注册，但是2023年12月左右的时候，不需要手机号了，可以去看着注册一个账号。</li></ol><br><h2 id="推荐网站"><a href="#推荐网站" class="headerlink" title="推荐网站"></a>推荐网站</h2><p>至于推荐的网站，我会根据<strong>用途分类</strong>，当然用途冲突也很正常，自己多研究下就了解了，实在不了解，谷歌搜索一下就行（多用谷歌，因为它真的很强大，还不和百度一样收广告费，钱给的多就排前面！）。</p><h3 id="获取资讯"><a href="#获取资讯" class="headerlink" title="获取资讯"></a>获取资讯</h3><p>翻墙后可能很多视频和见解会对你的价值观产生冲击，我的理解是看看就好，用心去想去看问题，跟着内心走即可。</p><br><h4 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h4><p>这个网站几乎是我翻墙后使用最多的网站，在上面学到了很多的知识， 有专业知识，也有其他知识，我推荐些我常看的博主（大部分都是中文栏目）。</p><p><strong>计算机相关知识：</strong></p><ul><li><p><a href="https://www.youtube.com/@bulianglin">不良林</a></p></li><li><p><a href="https://www.youtube.com/@lingdujieshuo">零度解说</a></p></li><li><p><a href="https://www.youtube.com/@geekhour_net">GeekHour</a></p></li><li><p><a href="https://www.youtube.com/@ihuamo">花墨世界</a></p></li><li><p><a href="https://www.youtube.com/@james-kool">走歪的工程師James</a></p></li><li><p><a href="https://www.youtube.com/@KJKKK2023">科技KKK</a></p></li></ul><p><strong>科普相关：</strong></p><ul><li><p><a href="https://www.youtube.com/@cheapaoe">cheap</a></p></li><li><p><a href="https://www.youtube.com/@NDWTB">脑洞乌托邦</a></p></li><li><p><a href="https://www.youtube.com/@geekerwan1024">极客湾Geekerwan</a></p></li><li><p><a href="https://www.youtube.com/@AkilaZhang">电丸科技AK</a></p></li><li><p><a href="https://www.youtube.com/@ele870">Ele实验室</a></p></li></ul><p><strong>日常生活相关：</strong></p><ul><li><p><a href="https://www.youtube.com/@laoliang1972">老梁</a></p></li><li><p><a href="https://www.youtube.com/@XinHeBaiDu">心河摆渡</a></p></li><li><p><a href="https://www.youtube.com/@ProletariatsBishop">睡前消息</a></p></li><li><p><a href="https://www.youtube.com/@SadhguruChinese">Sadhguru Chinese</a></p></li><li><p><a href="https://www.youtube.com/@daqige">大气爱智慧</a></p></li><li><p><a href="https://www.youtube.com/@gingerbread0529">薑餅資</a></p></li></ul><p><strong>男女知识方面：</strong></p><ul><li><p><a href="https://www.youtube.com/@DrGracie">許藍方博士</a></p></li><li><p><a href="https://www.youtube.com/@teacherCarrie">Carrie雨千</a></p></li><li><p><a href="https://www.youtube.com/@ryan91pro">瑞恩情感TV</a></p></li><li><p><a href="https://www.youtube.com/@sungful6">嵩馥性健康</a></p></li><li><p><a href="https://www.youtube.com/@Chaozhibai">超直白Chaozhibai</a></p></li></ul><p><strong>质量高的（懂的都懂）：</strong></p><ul><li><p><a href="https://www.youtube.com/@leeesovely">쏘블리 TV</a></p></li><li><p><a href="https://www.youtube.com/@SSOATV">SSOA TV</a></p></li><li><p><a href="https://www.youtube.com/@lovely.mii_">러블리 장미 룩북 LookBook</a></p></li><li><p><a href="https://www.youtube.com/@yeonhwa2555">연화 YeonHwa</a></p></li></ul><br><h4 id="推特"><a href="#推特" class="headerlink" title="推特"></a><a href="https://twitter.com/">推特</a></h4><p>这也是翻墙后经常看的频道，中国人和华人也特别多。</p><br><h4 id="国际版抖音"><a href="#国际版抖音" class="headerlink" title="国际版抖音"></a><a href="https://www.tiktok.com/explore">国际版抖音</a></h4><p>这个在国外也特别火，但是一般国内安卓或者苹果手机下载TikTok后是无法播放的，要么就在电脑上面看，要么得用相关破解版（苹果手机不是主力机的话，不建议下载破解版TikTok，因为下载后还需要七天自签一次），自己可以去youtube或者google搜索相关教程（注意日期一般要几个月以内，因为它的审查制度比较）。</p><br><h4 id="ins"><a href="#ins" class="headerlink" title="ins"></a><a href="https://www.instagram.com/">ins</a></h4><p>这个我以前看的比较多，里面的擦边视频很顶，点几个赞，主页推送的全是擦边视频了（因为是国外平台，所以比抖音尺度更大）…..</p><br><h4 id="脸书"><a href="#脸书" class="headerlink" title="脸书"></a><a href="https://www.facebook.com/">脸书</a></h4><p>这个我用的比较少，但是流量也挺大.</p><br><h4 id="电报"><a href="#电报" class="headerlink" title="电报"></a><a href="https://telegram.org/">电报</a></h4><p>这个也是我用的很多的软件，隐秘性比较强，相当于qq和微信，上面群组和国人非常多，但也要小心骗子。</p><br><h3 id="其他网站"><a href="#其他网站" class="headerlink" title="其他网站"></a>其他网站</h3><p>至于其他音乐，电影网站，我不做推荐，因为我平时看的也少，基本就在国内的平台观看了，至于适合晚上被窝看的网站，我也不做推荐，翻墙后推荐的有很多，直接谷歌搜索名字就能搜出来相关官网，自己慢慢摸索就行。</p><br><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总之翻墙后确实感觉互联网精彩了很多，学到了更多奇奇怪怪的知识，但毕竟不被国家认定为合法，大家还是小心谨慎为重，在小心谨慎的基础上，慢慢发现更多的精彩吧。</p><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><p><a href="https://overwallvpn.com/hot-site/#i-4">翻墙必看—看看老司机们翻墙后都在做什么，三分钟快速“抄作业”！ - overwall (overwallvpn.com)</a></p></li><li><p><a href="https://qianghub.com/what-to-do-after-bypass-gfw/">翻墙后看什么 - 最热门的 62 个翻墙必看网站推荐 - qianghub</a></p></li><li><p>各种机场的教程（自己截图太慢了），这里不一一列举了。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题中的输入输出汇总</title>
      <link href="/posts/2023/11/23/1962820535.html"/>
      <url>/posts/2023/11/23/1962820535.html</url>
      
        <content type="html"><![CDATA[<h1 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h1><p>因为还要备战第二次蓝桥杯和为了以后的算法笔试，所以我准备汇总一下刷题过程中遇到的输入和输出情况，可能这篇文章会随着我刷题量而不断更新。</p><br><br><h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><p>java常用的输入方式有四种（System.in,Scanner,InputStreamReader,BufferesReader），这里一般我们常用的是Scanner或者BufferesReader，我只介绍这两种。</p><h2 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h2><p>java.util.Scanner是Java5的新特征，主要功能是简化文本扫描，这个类最实用的地方表现在获取控制台输入。当通过new Scanner(System.in)创建一个Scanner，控制台会一直等待输入，直到敲回车键结束，把所输入的内容传给Scanner，作为扫描对象。如果要获取输入的内容，则只需要调用Scanner的nextLine()方法即可。</p><p>Scanner也可以从字符串（Readable）、输入流、文件等等来直接构建Scanner对象，有了Scanner了，就可以逐段（根据正则分隔式）来扫描整个文本，并对扫描后的结果做想要的处理。</p><p><strong><code>Scanner</code> 类的 <code>nextInt()</code> 方法实际上是从标准输入流中读取文本数据，并尝试将其解析为整数。</strong></p><p><strong>控制台扫描：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> in.nextLine();</span><br><span class="line">    <span class="keyword">if</span> (line.equals(<span class="string">&quot;exit&quot;</span>)) <span class="keyword">break</span>;          <span class="comment">//如果输入为&quot;exit&quot;，则退出</span></span><br><span class="line">    System.out.println(<span class="string">&quot;输入：&quot;</span> + line);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Scanner默认使用空格作为分割符来分隔文本，但允许你指定新的分隔符：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(<span class="string">&quot;123 asdf sd 45 789 sdf asdfl,sdf.sdfl,asdf    ......asdfkl    las&quot;</span>);</span><br><span class="line"><span class="comment">// 以自己制定方式分割文本，支持正则表达式</span></span><br><span class="line"><span class="comment">//sc.useDelimiter(&quot; |,|\\.&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (sc.hasNext()) &#123;</span><br><span class="line">    System.out.println(sc.next());</span><br><span class="line">    <span class="comment">//会以空格为间隔依次输出上面的字符串</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>重要api：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Pattern <span class="title function_">delimiter</span> <span class="params">()</span>  <span class="comment">//返回此 Scanner 当前正在用于匹配分隔符的 Pattern。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNext</span> <span class="params">()</span>   <span class="comment">//判断扫描器中当前扫描位置后是否还存在下一段。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNextLine</span> <span class="params">()</span>   <span class="comment">//如果在此扫描器的输入中存在另一行，则返回 true。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">next</span> <span class="params">()</span>        <span class="comment">//查找并返回来自此扫描器的下一个完整标记。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">nextLine</span> <span class="params">()</span>    <span class="comment">// 此扫描器执行当前行，并返回跳过的输入信息。</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">nextInt</span> <span class="params">()</span>       <span class="comment">//扫描下一个整数，依次类推还有Double、Floate、Long等</span></span><br></pre></td></tr></table></figure><br><h2 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h2><p>BufferedReader 从字符输入流中读取文本，缓冲各个字符，从而实现字符、数组和行的高效读取。（通常和InputStreamReader连用，因为输入的数据是字节流，需要InputStreamReader将其转成成字符流）</p><p><strong>常用构造：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BufferedReader br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line"><span class="comment">//这行代码创建了一个能够从标准输入读取数据的 BufferedReader 对象，并将其存储在变量 br 中。</span></span><br></pre></td></tr></table></figure><p><strong>对应解释：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System.in</span><br><span class="line"><span class="comment">//System.in 是 Java 中的一个标准输入流，通常用于从控制台（键盘）读取用户输入。它是一个InputStream 对象，用于读取字节数据。</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in);</span><br><span class="line"><span class="comment">//构造一个InputStreamReader对象这个对象是字节流通向字符流的桥梁：它使用指定的 charset 读取字节并将其解码为字符。</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line"><span class="comment">//构造一个字符流的缓存，里面存放在控制台输入的字节转换后成的字符。</span></span><br><span class="line">str=bf.readLine();</span><br><span class="line"><span class="comment">//从这个缓存中读取一行的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//整个这句话拆开来写为：</span></span><br><span class="line"><span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> System.in ;</span><br><span class="line"><span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(in);</span><br><span class="line"><span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(isr);</span><br></pre></td></tr></table></figure><br><br><h1 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h1><h2 id="明确数据个数"><a href="#明确数据个数" class="headerlink" title="明确数据个数"></a>明确数据个数</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>对于样例数据，如果题目要求的<strong>处理方式都是一样</strong>的，且<strong>给定了数据的个数</strong>，那么我们就能创建一个一维数组来解决。</p><p><strong>示例一：</strong></p><p>输入包括两行数据。第一行包含10个100到200之间（包括100和200）的整数（以厘米为单位）分别表示10个苹果到地面的高度，两个相邻的整数之间用一个空格隔开。第二行只包括一个100到120之间（包含100和120）的整数（以厘米为单位），表示陶陶把手伸直的时候能够达到的最大高度。</p><br><p><strong>示例二：</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231123204833259.png" alt="image-20231123204833259"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">36</span>;</span><br><span class="line"><span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    a[i] = scanner.nextInt();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p><strong>示例一：</strong></p><p>对于二维数组，而且<strong>样例中没有空格</strong>的时候，我们一般可以两层for循环输入，或者一层for循环，<strong>将每一行输入转换成一个字符数组。</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231123213506775.png" alt="image-20231123213506775"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">s[i] = (<span class="string">&quot; &quot;</span> + scanner.next()).toCharArray();  </span><br><span class="line"><span class="comment">//从下标1开始</span></span><br></pre></td></tr></table></figure><br><p><strong>示例二：</strong></p><p><strong>样例中出现空格时候</strong>，我们一般用二维数组接收(<strong>因为next()不接收空格</strong>)即可。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">6</span> </span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        <span class="type">char</span>[][] arr = <span class="keyword">new</span> <span class="title class_">char</span>[m][n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                arr[i][j] = in.next().charAt(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//或者直接用整数接收,看个人习惯</span></span><br></pre></td></tr></table></figure><br><p><strong>示例三：</strong></p><p><strong>样例没有空格，而且需要查找某一个具体数组值的时候。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"> C = in.nextInt();  <span class="comment">//列</span></span><br><span class="line"> R = in.nextInt();  <span class="comment">//行</span></span><br><span class="line"><span class="type">int</span> x=-<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> y=-<span class="number">1</span>;</span><br><span class="line">in.nextLine();   <span class="comment">//吃掉前面输入的回车</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; R; i++) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> in.nextLine();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; C; j++) &#123;</span><br><span class="line">        arr[i][j] = line.charAt(j);</span><br><span class="line">        <span class="keyword">if</span>(arr[i][j] == <span class="string">&#x27;K&#x27;</span>)&#123;</span><br><span class="line">            x = i;</span><br><span class="line">            y = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="不明确数据个数"><a href="#不明确数据个数" class="headerlink" title="不明确数据个数"></a>不明确数据个数</h2><p>在我们不明确输入的行数和个数的时候，经常会用到<b>while循环+hasNext()</b>判断。</p><h3 id="直接输入"><a href="#直接输入" class="headerlink" title="直接输入"></a>直接输入</h3><p><img src="https://img.liuyueyue.top//xlimage-20231123212419425.png" alt="image-20231123212419425"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(sc.hasNext())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">N</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (N &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            N /= <span class="number">2</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(cnt);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br><br><h3 id="一维数组-1"><a href="#一维数组-1" class="headerlink" title="一维数组"></a>一维数组</h3><p><strong>示例一：</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231123212801199.png" alt="image-20231123212801199"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (in.hasNext()) &#123;</span><br><span class="line">    String[] a = in.nextLine().split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><strong>示例二：</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231123214216775.png" alt="image-20231123214216775"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">    scanner.nextLine();</span><br><span class="line"></span><br><span class="line">    String[] str = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">10000</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">realCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        str[i] = scanner.nextLine();</span><br><span class="line">        realCount++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (str[i].equals(<span class="string">&quot;stop&quot;</span>)) &#123;</span><br><span class="line">            realCount--;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><strong>示例三：</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231123234809060.png" alt="image-20231123234809060"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式1:   </span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">//将输入的内容添加到list</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in.nextLine());  <span class="comment">//输入换行结束,这个Scanner对象是读取in的内容，不是读取键盘了</span></span><br><span class="line">        <span class="keyword">while</span> (sc.hasNext()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            list.add(x);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式2:</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(in.nextLine());  <span class="comment">//输入换行结束,这个Scanner对象是读取in的内容，不是读取键盘了</span></span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100005</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (sc.hasNext()) &#123;</span><br><span class="line">            a[n] = sc.nextInt();</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方式3:</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String[] str = in.nextLine().split(<span class="string">&quot; &quot;</span>);  </span><br><span class="line"><span class="comment">//输入很细节，不确定数组长度时候使用,因为nextLine()遇到回车退出</span></span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100005</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            a[i+<span class="number">1</span>]=Integer.parseInt(str[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//a[1]=str[0]，a[2]=str[1].....</span></span><br></pre></td></tr></table></figure><br><h3 id="二维数组-1"><a href="#二维数组-1" class="headerlink" title="二维数组"></a>二维数组</h3><p><strong>示例一：</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231129232147258.png" alt="image-20231129232147258"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">6 9 </span><br><span class="line"><span class="string">....</span><span class="comment">#. </span></span><br><span class="line"><span class="string">.....</span><span class="comment"># </span></span><br><span class="line"><span class="string">......</span> </span><br><span class="line"><span class="string">......</span> </span><br><span class="line"><span class="string">......</span> </span><br><span class="line"><span class="string">......</span> </span><br><span class="line"><span class="string">......</span> </span><br><span class="line"><span class="comment">#@...# </span></span><br><span class="line">.<span class="comment">#..#. </span></span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 正常输入</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            n =in.nextInt();</span><br><span class="line">            m =in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(n==<span class="number">0</span> &amp;&amp;m==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">                ct[i] = in.next().toCharArray();</span><br><span class="line">            &#125;</span><br><span class="line">  &#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">//2. 输入流输入</span></span><br><span class="line"><span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">       <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            String[] input = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            n = Integer.parseInt(input[<span class="number">0</span>]);</span><br><span class="line">            m = Integer.parseInt(input[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">0</span> &amp;&amp; m == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">                ct[i] = reader.readLine().toCharArray();</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><br><br><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><p>基本都是难在输入，所以输出部分就没有什么内容…..</p><h2 id="多组输入多组输入"><a href="#多组输入多组输入" class="headerlink" title="多组输入多组输入"></a>多组输入多组输入</h2><p>这种情况是最常见的，我们只需要不断读取每一行的内容，然后在循环末尾添加打印语句。</p><p><img src="https://img.liuyueyue.top//xlxlimage-20231123212419425.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(sc.hasNext())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">N</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (N &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            N /= <span class="number">2</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(cnt);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br><br><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/qq_36631076/article/details/77006007">java中的四大输入：System.in,Scanner,InputStreamReader,BufferesReader的用法与区别【改】-CSDN博客</a></p><p><a href="https://blog.csdn.net/wuha0/article/details/7336048">BufferedReader(new InputStreamReader(System.in));-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题日常 </tag>
            
            <tag> 刷题总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一元三次方程求实数根</title>
      <link href="/posts/2023/11/18/1296248397.html"/>
      <url>/posts/2023/11/18/1296248397.html</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><strong>蓝桥杯算法训练VIP-一元三次方程求解</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231118201701332.png" alt="image-20231118201701332"></p><h1 id="数学分析"><a href="#数学分析" class="headerlink" title="数学分析"></a>数学分析</h1><p><img src="https://img.liuyueyue.top//xlimage-20231118202252546.png" alt="image-20231118202252546"></p><p>对于求解一元三次方程，我们可以使用卡尔达诺公式，可以应对方程有一个实根和两个复数根、一个实根和两个重复复数根、以及三个不同实根这三种情况。</p><p><img src="https://img.liuyueyue.top//xlimage-20231118202636832.png" alt="image-20231118202636832"></p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><h2 id="暴力解法"><a href="#暴力解法" class="headerlink" title="暴力解法"></a>暴力解法</h2><p>暴力解法很容易想到，<strong>缺点就是只能应对实根范围比较小的题目</strong></p><ul><li>根据题目实数根的范围，设它为i，遍历i从-100到100，每次增加0.01（因为精确两位小数）</li><li>判断一元三次方程的值是否在-0.01到0.01之间（因为是浮点数，由于浮点数的二进制表示无法精确表示某些十进制小数，例如0.1的二进制表示就是一个无限循环小数，而计算机储存浮点数使用的二进制位数有限，<strong>所以浮点数是一个近似值，只能确定范围</strong>，不能精确到某一个值）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class 一元三次方程 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> a, b, c, d; <span class="comment">// ax^3 + bx^2 + cx + d = 0</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">// 输入系数</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;请输入方程的系数（空格分隔）：&quot;);</span></span><br><span class="line">        a = scanner.nextDouble();</span><br><span class="line">        b = scanner.nextDouble();</span><br><span class="line">        c = scanner.nextDouble();</span><br><span class="line">        d = scanner.nextDouble();</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> i, temp;</span><br><span class="line">        <span class="type">double</span>[] num = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">3</span>]; <span class="comment">// 存放实根</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 记录实根数目</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = -<span class="number">100</span>; i &lt;= <span class="number">100</span>; i += <span class="number">0.01</span>) &#123;</span><br><span class="line">            temp = a * Math.pow(i, <span class="number">3</span>) + b * Math.pow(i, <span class="number">2</span>) + c * i + d;</span><br><span class="line">            <span class="keyword">if</span> (temp &gt; -<span class="number">0.01</span> &amp;&amp; temp &lt; <span class="number">0.01</span>)</span><br><span class="line">                num[k++] = i;</span><br><span class="line">            <span class="keyword">if</span> (k == <span class="number">3</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出实根</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%.2f %.2f %.2f&quot;</span>, num[<span class="number">0</span>], num[<span class="number">1</span>], num[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数学解法"><a href="#数学解法" class="headerlink" title="数学解法"></a>数学解法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//        System.out.println(&quot;请输入方程的系数（空格分隔）：&quot;);</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">c</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解方程</span></span><br><span class="line">        <span class="type">double</span>[] roots = solveCubicEquation(a, b, c, d);</span><br><span class="line">        Arrays.sort(roots);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        System.out.println(&quot;方程的实根为：&quot;);</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">double</span> root : roots) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.2f &quot;</span>, root);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">double</span>[] solveCubicEquation(<span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span> c, <span class="type">double</span> d) &#123;</span><br><span class="line">        <span class="type">double</span>[] roots = <span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将方程转化为标准形式</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">p</span> <span class="operator">=</span> c / a - (b * b) / (<span class="number">3</span> * a * a);</span><br><span class="line">        <span class="type">double</span> <span class="variable">q</span> <span class="operator">=</span> d / a + (<span class="number">2</span> * b * b * b) / (<span class="number">27</span> * a * a * a) - (b * c) / (<span class="number">3</span> * a * a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算判别式</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">delta</span> <span class="operator">=</span> q * q / <span class="number">4</span> + Math.pow((p / <span class="number">3</span>), <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (delta &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 一实根，两虚根</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">u</span> <span class="operator">=</span> Math.cbrt(-q / <span class="number">2</span> + Math.sqrt(delta));</span><br><span class="line">            <span class="type">double</span> <span class="variable">v</span> <span class="operator">=</span> Math.cbrt(-q / <span class="number">2</span> - Math.sqrt(delta));</span><br><span class="line">            roots[<span class="number">0</span>] = u + v - b / (<span class="number">3</span> * a);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (delta == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 一个实根和两个重复的虚根</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">u</span> <span class="operator">=</span> Math.cbrt(-q / <span class="number">2</span>);</span><br><span class="line">            roots[<span class="number">0</span>] = <span class="number">2</span> * u - b / (<span class="number">3</span> * a);</span><br><span class="line">            roots[<span class="number">1</span>] = roots[<span class="number">2</span>] = -u - b / (<span class="number">3</span> * a);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 三个不同的实根</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">theta</span> <span class="operator">=</span> Math.acos(-q / <span class="number">2</span> * Math.sqrt(-<span class="number">27</span> / (p * p * p)));</span><br><span class="line">            roots[<span class="number">0</span>] = <span class="number">2</span> * Math.sqrt(-p / <span class="number">3</span>) * Math.cos(theta / <span class="number">3</span>) - b / (<span class="number">3</span> * a);</span><br><span class="line">            roots[<span class="number">1</span>] = <span class="number">2</span> * Math.sqrt(-p / <span class="number">3</span>) * Math.cos((theta + <span class="number">2</span> * Math.PI) / <span class="number">3</span>) - b / (<span class="number">3</span> * a);</span><br><span class="line">            roots[<span class="number">2</span>] = <span class="number">2</span> * Math.sqrt(-p / <span class="number">3</span>) * Math.cos((theta + <span class="number">4</span> * Math.PI) / <span class="number">3</span>) - b / (<span class="number">3</span> * a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> roots;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 刷题日常 </tag>
            
            <tag> 基础算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关系数据库的简单概念和范式理解</title>
      <link href="/posts/2023/10/17/3134384050.html"/>
      <url>/posts/2023/10/17/3134384050.html</url>
      
        <content type="html"><![CDATA[<h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><p><strong>首先说明 键字&#x3D;码字，所以 主键&#x3D;主码&#x3D;主关键字，候选键&#x3D;候选码&#x3D;候选关键字</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231017090955695.png" alt="image-20231017090955695"></p><ol><li><p><strong>码&#x3D;超键</strong>：能够<strong>唯一标识</strong>一条记录的属性或属性集。</p><ul><li>标识性：一个数据表的所有记录都具有不同的超键</li><li>非空性：不能为空</li><li>有些时候也把码称作“键”</li></ul></li><li><p><strong>候选键&#x3D;候选码</strong>：能够<strong>唯一标识</strong>一条记录的<strong>最小属性集</strong></p><ul><li>标识性：一个数据表的所有记录都具有不同的候选键</li><li>最小性：任一候选键的任何真子集都不能唯一标识一个记录（比如在成绩表中（学号,课程号）是一个候选键，单独的学号，课程号都不能决定一条记录）</li><li>非空性：不能为空</li><li><strong>候选键是没有多余属性的超键</strong></li><li>举例：学生ID是候选码，那么含有候选码的都是码。</li><li>少部分地方也有叫超级码的，但是见得不多</li></ul></li><li><p><strong>主键&#x3D;主码</strong>：<strong>某个</strong>能够<strong>唯一标识</strong>一条记录的<strong>最小属性集（是从候选码里人为挑选的一条）</strong></p><ul><li>唯一性：一个数据表只能有一个主键</li><li>标识性：一个数据表的所有记录都具有不同的主键取值</li><li>非空性：不能为空</li><li>人为的选取某个候选码为主码</li></ul></li><li><p><strong>主属性：</strong>包含在任一候选码中的属性称主属性。简单来说，主属性是候选码所有属性的并集</p></li><li><p><strong>非主属性</strong>：不包含在候选码中的属性称为非主属性。 非主属性是相对于主属性来定义的</p></li><li><p><strong>外键（foreign key）</strong>：子数据表中出现的<strong>父数据表的主键</strong>，称为子数据表的外键</p></li><li><p><strong>全码：</strong>当所有的属性共同构成一个候选码时，这时该候选码为全码</p></li><li><p><strong>代理键</strong>：当不适合用任何一个候选键作为主键时（如数据太长等），添加一个没有实际意义的键作为主键，这个键就是代理键。（如常用的序号1、2、3）</p></li><li><p><strong>自然键</strong>：自然生活中唯一能够标识一条记录的键（如身份证）</p></li></ol><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>学生成绩信息表中有（学号、姓名、性别、年龄、系别、专业等）</p><p><strong>超键&#x2F;码：</strong></p><p>由于学号能确定一个学生，因此学生表中含有学号的任意组合都为此表的超键。如：（学号）、（学号，姓名）、（学号，性别）等</p><p>若我们假设学生的姓名唯一，没有重名的现象。</p><p>  学号唯一，所以是一个超键<br>  姓名唯一，所以是一个超键<br>（姓名，性别）唯一，所以是一个超键<br>（姓名，年龄）唯一，所以是一个超键<br>（姓名，性别，年龄）唯一，所以是一个超键</p><p><strong>候选键：</strong></p><p>   学号唯一，而且没有多余属性，所以是一个候选键</p><p>   姓名唯一，而且没有多余属性，所以是一个候选键</p><p>  （姓名，性别）唯一，但是单独姓名一个属性就能确定这个人是谁，所以性别这个属性就是多余属性，所以（姓名，性别）不是候选键<br>  （姓名，年龄），（姓名，性别，年龄）同上，也不是候选键</p><p><strong>主键：</strong></p><p>主键就是候选键里面的一个，是人为规定的，例如学生表中，我们通常会让“学号”做主键，学号能唯一标识这一个元组。</p><p><strong>外键：</strong></p><p>外键就很简单了，假如我们还有一个教师表，每个教师都有自己的编号，假设老师编号在教师表中是主键，在学生表中它就是外键</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p><img src="https://img.liuyueyue.top//xlimage-20231017105656057.png" alt="image-20231017105656057"></p><p><img src="https://img.liuyueyue.top//xlimage-20231017105716977.png" alt="image-20231017105716977"></p><h2 id="函数依赖"><a href="#函数依赖" class="headerlink" title="函数依赖"></a>函数依赖</h2><p><strong>在一个表里面，属性X可以映射到属性Y，也就是说知道了X就能确定Y，称X为决定因素。</strong></p><p><strong>有一个关系模式S(Sno,Sname,Sage)</strong></p><p>如果知道了一个学生的学号Sno，那我就能确定他的姓名Sname和年龄Sage。</p><p><img src="https://img.liuyueyue.top//xlimage-20231017110705119.png" alt="image-20231017110705119"></p><p>如果强制规定学生姓名不能重复。那么，知道了一个学生的姓名也是可以确定其他属性的，这也是满足函数依赖关系的。</p><h3 id="完全函数依赖"><a href="#完全函数依赖" class="headerlink" title="完全函数依赖"></a>完全函数依赖</h3><p><strong>有一个关系模式S(Sno,Sname,Cno,Grade)</strong></p><p>如果我想知道某位学生的某一门课的成绩Grade，那我必须得<strong>同时知道</strong>他的学号Sno和课程号Cno。<br>但如果我只知道一部分信息，比如他的Sno或者Cno可以吗？答案是不行的！<strong>此时称Y[Grade]完全依赖于X[Sno,Cno]。</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231017110951519.png" alt="image-20231017110951519"></p><h3 id="部分函数依赖"><a href="#部分函数依赖" class="headerlink" title="部分函数依赖"></a>部分函数依赖</h3><p>如果我想知道某位学生的姓名Sname，那我知道他的学号Sno就可以了。也就是说<strong>Y[Sname]只函数依赖于X[Sno,Cno]中的子集x[Sno</strong>]<strong>，此时称Y部分函数依赖于X。</strong></p><p><img src="https://img.liuyueyue.top//xlimage-20231017111116265.png" alt="image-20231017111116265"></p><h3 id="传递函数依赖"><a href="#传递函数依赖" class="headerlink" title="传递函数依赖"></a>传递函数依赖</h3><p><strong>有一个关系模式S(Sno,Sdept,Mname)</strong><br>如果我知道了一个学生的学号Sno，那我就能知道他所在的系Sdept。(因为理论上一个学生只属于一个系)<br>如果我知道了某一个系Sdept，那么我就能知道这个系的系主任的姓名Mname。(一个系只有一个正的系主任)<br>也就是说，我知道了一个学生的学号Sno，其实我就知道了他所在系的系主任的姓名Mname。但这个过程中，他们是<strong>不存在直接函数依赖</strong>的，我需要通过系名称<strong>Sdept作为一个桥梁</strong>去把二者联系起来的。<br><img src="https://img.liuyueyue.top//xlimage-20231017111247348.png" alt="image-20231017111247348"></p><h2 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h2><p>关系数据库中的模式设计要满足一定的规范，引入了范式这一概念。<br>不管做哪种范式的设计，最终要的思想是“<strong>one fact in one place</strong>”，也就是“一事一地”。</p><p><strong>举例</strong></p><p>现有一关于学生的关系模式Student(学生编号 , 学生姓名, 班级编号, 院系, 课程编号 , 成绩)</p><p><img src="https://img.liuyueyue.top//xlimage-20231017111442520.png" alt="image-20231017111442520"></p><p><strong>（学生编号、课程编号）</strong>作为主键，可以唯一标识每条元组</p><h3 id="1NF"><a href="#1NF" class="headerlink" title="1NF"></a>1NF</h3><p>定义：关系中每一分量不可再分。即不能以集合、序列等作为属性。（也就是不能表中套表，要保证数据的原子性。）</p><table><thead><tr><th>学生编号</th><th>课程编号</th></tr></thead><tbody><tr><td>S01</td><td>{C1，C2，C3}</td></tr><tr><td>S02</td><td>{C1，C4}</td></tr></tbody></table><p>它就不满足1NF，因为{C1，C2，C3}和{C1，C4}是集合。</p><p>修改为符合1NF：</p><table><thead><tr><th>学生编号</th><th>课程编号</th></tr></thead><tbody><tr><td>S01</td><td>C1</td></tr><tr><td>S01</td><td>C2</td></tr><tr><td>S01</td><td>C3</td></tr><tr><td>S02</td><td>C1</td></tr></tbody></table><h3 id="2NF"><a href="#2NF" class="headerlink" title="2NF"></a>2NF</h3><p><strong>定义：在1NF基础上，消除非主属性对键的部分依赖，则称它符合2NF。</strong></p><p>对于<code>学生姓名</code>、学生所属的<code>班级编号</code>、<code>院系</code>，这三个属性可以直接通过<code>学生编号</code>来确定，在这里<code>课程编号#</code>显得很多余。也就是，<code>学生姓名、班级编号、院系</code>对（<strong>学生编号、课程编号</strong>）<strong>部分函数依赖</strong>。把Student表进行拆分，可以消除部分依赖。</p><p>其中，学生表Student如下：</p><table><thead><tr><th>S01</th><th>杨明</th><th>D01</th><th>思齐</th></tr></thead><tbody><tr><td>S02</td><td>李婉</td><td>D01</td><td>思齐</td></tr><tr><td>S01</td><td>杨明</td><td>D01</td><td>思齐</td></tr><tr><td>S03</td><td>刘海</td><td>D02</td><td>述圣</td></tr><tr><td>S04</td><td>安然</td><td>D02</td><td>述圣</td></tr><tr><td>S05</td><td>乐天</td><td>D03</td><td>省身</td></tr></tbody></table><p>学生-课程表如下：</p><table><thead><tr><th>学生编号</th><th>课程编号</th><th>成绩</th></tr></thead><tbody><tr><td>S01</td><td>C01</td><td>90</td></tr><tr><td>S02</td><td>C01</td><td>87</td></tr><tr><td>S01</td><td>C02</td><td>92</td></tr><tr><td>S03</td><td>C01</td><td>95</td></tr><tr><td>S04</td><td>C02</td><td>78</td></tr><tr><td>S05</td><td>C01</td><td>82</td></tr></tbody></table><h3 id="3NF"><a href="#3NF" class="headerlink" title="3NF"></a>3NF</h3><p><strong>定义：在2NF基础上，消除非主属性对键的传递依赖，则称它符合3NF。</strong></p><p>根据上面对传递依赖的分析，对于Student表，学生编号可以唯一确定他所在的院系，但是注意到这中间存在传递过程，即学生编号唯一确定该学生所对应的班级编号，班级编号对应唯一的院系。<strong>我们称，院系对学生编号传递函数依赖。</strong></p><p>把Student表继续进行拆分，可以消除传递依赖。</p><p>其中，学生表Student如下：</p><table><thead><tr><th>学生编号</th><th>学生姓名</th><th>班级编号</th></tr></thead><tbody><tr><td>S01</td><td>杨明</td><td>D01</td></tr><tr><td>S02</td><td>李婉</td><td>D01</td></tr><tr><td>S01</td><td>杨明</td><td>D01</td></tr><tr><td>S03</td><td>刘海</td><td>D02</td></tr><tr><td>S04</td><td>安然</td><td>D02</td></tr><tr><td>S05</td><td>乐天</td><td>D03</td></tr></tbody></table><p>班级-院系表如下：</p><table><thead><tr><th>班级编号</th><th>院系</th></tr></thead><tbody><tr><td>D01</td><td>思齐</td></tr><tr><td>D02</td><td>述圣</td></tr><tr><td>D03</td><td>省身</td></tr></tbody></table><h3 id="BCNF"><a href="#BCNF" class="headerlink" title="BCNF"></a>BCNF</h3><p><strong>每个非主属性必须直接（或完全）依赖于候选键的所有属性，而不是候选键的一部分。</strong></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/Jeremy_Tsang/article/details/108949656">数据库函数依赖——完全函数依赖、部分函数依赖、传递函数依赖【通俗易懂，博主会讲人话】_完全函数依赖和部分函数依赖怎么理解-CSDN博客</a></p><p><a href="https://blog.csdn.net/wyh7280/article/details/83350722">范式通俗理解：1NF、2NF、3NF和BNCF_数据库范式-CSDN博客</a></p><p><a href="https://blog.csdn.net/sumaliqinghua/article/details/85872446">一文搞懂候选码、主码、全码、外码、主属性、主键、主关键字、非主属性清晰总结_什么是候选码举例-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
